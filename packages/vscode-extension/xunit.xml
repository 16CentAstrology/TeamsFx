<testsuite name="Mocha Tests" tests="929" failures="0" errors="9" skipped="0" timestamp="Fri, 19 Apr 2024 05:07:54 GMT" time="19.423">
<testcase classname="chat create command createCommandHandler()" name="returns default answer" time="0.004"/>
<testcase classname="chat create command createCommandHandler()" name="returns no result answer" time="0.002"/>
<testcase classname="chat create command createCommandHandler()" name="has exactly 1 matched sample" time="0.002"/>
<testcase classname="chat create command createCommandHandler()" name="has exactly 1 matched template" time="0.002"/>
<testcase classname="chat create command createCommandHandler()" name="has multiple matched results" time="0.003"/>
<testcase classname="chat create command createCommandHandler()" name="has &#x3E;5 matched results" time="0.002"/>
<testcase classname="chat create helper matchProject()" name="has matched sample project" time="0.299"/>
<testcase classname="chat create helper showFileTree()" name="calls filetree API" time="0.002"/>
<testcase classname="chat nextstep conditions" name="isFirstInstalled" time="0"/>
<testcase classname="chat nextstep conditions" name="isProjectOpened" time="0.001"/>
<testcase classname="chat nextstep conditions" name="isM365AccountLogin" time="0"/>
<testcase classname="chat nextstep conditions" name="isAzureAccountLogin" time="0"/>
<testcase classname="chat nextstep conditions isDidNoActionAfterScaffolded" name="no opened project" time="0.001"/>
<testcase classname="chat nextstep conditions isDidNoActionAfterScaffolded" name="action status is empty" time="0"/>
<testcase classname="chat nextstep conditions isDidNoActionAfterScaffolded" name="some action is done" time="0"/>
<testcase classname="chat nextstep conditions isDidNoActionAfterScaffolded" name="some action is failed" time="0"/>
<testcase classname="chat nextstep conditions isDebugSucceededAfterSourceCodeChanged" name="no opened project" time="0"/>
<testcase classname="chat nextstep conditions isDebugSucceededAfterSourceCodeChanged" name="local debug not run before" time="0"/>
<testcase classname="chat nextstep conditions isDebugSucceededAfterSourceCodeChanged" name="local debug failed before" time="0"/>
<testcase classname="chat nextstep conditions isDebugSucceededAfterSourceCodeChanged" name="local debug succeeded before but out of date" time="0"/>
<testcase classname="chat nextstep conditions isDebugSucceededAfterSourceCodeChanged" name="local debug succeeded after source changed" time="0"/>
<testcase classname="chat nextstep conditions canPreviewInTestTool" name="no opened project" time="0"/>
<testcase classname="chat nextstep conditions canPreviewInTestTool" name="no launch.json file" time="0"/>
<testcase classname="chat nextstep conditions canPreviewInTestTool" name="no &#x27;Test Tool&#x27; in launch.json file" time="0"/>
<testcase classname="chat nextstep conditions canPreviewInTestTool" name="&#x27;Test Tool&#x27; in launch.json file" time="0"/>
<testcase classname="chat nextstep conditions isProvisionedSucceeded AfterInfraCodeChanged" name="no opened project" time="0"/>
<testcase classname="chat nextstep conditions isProvisionedSucceeded AfterInfraCodeChanged" name="provision not run before" time="0.001"/>
<testcase classname="chat nextstep conditions isProvisionedSucceeded AfterInfraCodeChanged" name="provision failed before" time="0"/>
<testcase classname="chat nextstep conditions isProvisionedSucceeded AfterInfraCodeChanged" name="provision succeeded before but out of date" time="0"/>
<testcase classname="chat nextstep conditions isProvisionedSucceeded AfterInfraCodeChanged" name="provision succeeded after infra changed" time="0"/>
<testcase classname="chat nextstep conditions isDeployed AfterSourceCodeChanged" name="no opened project" time="0"/>
<testcase classname="chat nextstep conditions isDeployed AfterSourceCodeChanged" name="deploy not run before" time="0"/>
<testcase classname="chat nextstep conditions isDeployed AfterSourceCodeChanged" name="deploy failed before" time="0"/>
<testcase classname="chat nextstep conditions isDeployed AfterSourceCodeChanged" name="deploy succeeded before but out of date" time="0"/>
<testcase classname="chat nextstep conditions isDeployed AfterSourceCodeChanged" name="deploy succeeded after source changed" time="0"/>
<testcase classname="chat nextstep conditions isPublishedSucceededBefore" name="no opened project" time="0.001"/>
<testcase classname="chat nextstep conditions isPublishedSucceededBefore" name="publish not run before" time="0"/>
<testcase classname="chat nextstep conditions isPublishedSucceededBefore" name="publish failed before" time="0"/>
<testcase classname="chat nextstep conditions isPublishedSucceededBefore" name="publish succeeded" time="0"/>
<testcase classname="chat nextstep conditions isHaveReadMe" name="no opened project" time="0.001"/>
<testcase classname="chat nextstep conditions isHaveReadMe" name="no readme" time="0"/>
<testcase classname="chat nextstep conditions isHaveReadMe" name="had readme" time="0"/>
<testcase classname="chat nextstep handler nextstepCommandHandler()" name="prompt is unempty" time="0.002"/>
<testcase classname="chat nextstep handler nextstepCommandHandler()" name="prompt empty - no workspace" time="0.003"/>
<testcase classname="chat nextstep handler nextstepCommandHandler()" name="prompt empty - app opened" time="0.003"/>
<testcase classname="chat nextstep status" name="func: getMachineStatus" time="0.002"/>
<testcase classname="chat nextstep status func: getWholeStatus" name="folder === undefined" time="0.001"/>
<testcase classname="chat nextstep status func: getWholeStatus" name="folder !== undefined" time="0.002"/>
<testcase classname="chat nextstep status func: getWholeStatus" name="folder !== undefined (no project id)" time="0.002"/>
<testcase classname="next steps title: &#x22;Teams Toolkit&#x22;" name="condition: selected" time="0"/>
<testcase classname="next steps title: &#x22;Teams Toolkit&#x22;" name="condition: not selected" time="0"/>
<testcase classname="next steps title: &#x22;New Project&#x22;" name="condition: selected" time="0.001"/>
<testcase classname="next steps title: &#x22;New Project&#x22;" name="condition: not selected" time="0"/>
<testcase classname="next steps title: &#x22;Summary of README&#x22;" name="description" time="0"/>
<testcase classname="next steps title: &#x22;Summary of README&#x22;" name="condition: selected" time="0"/>
<testcase classname="next steps title: &#x22;Summary of README&#x22;" name="condition: not selected - no project opened" time="0.001"/>
<testcase classname="next steps title: &#x22;Summary of README&#x22;" name="condition: not selected - prerequisite check failed" time="0"/>
<testcase classname="next steps title: &#x22;Summary of README&#x22;" name="condition: not selected - did action before" time="0"/>
<testcase classname="next steps title: &#x22;Summary of README&#x22;" name="condition: not selected - had no readme content" time="0.001"/>
<testcase classname="next steps title: &#x22;Test Tool&#x22;" name="condition: selected" time="0.001"/>
<testcase classname="next steps title: &#x22;Test Tool&#x22;" name="condition: not selected - no project opened" time="0"/>
<testcase classname="next steps title: &#x22;Test Tool&#x22;" name="condition: not selected - prerequisite check failed" time="0"/>
<testcase classname="next steps title: &#x22;Test Tool&#x22;" name="condition: not selected - did no action before" time="0"/>
<testcase classname="next steps title: &#x22;Test Tool&#x22;" name="condition: not selected - debug succeed before" time="0.001"/>
<testcase classname="next steps title: &#x22;Test Tool&#x22;" name="condition: not selected - cannot preview in Test Tool" time="0.001"/>
<testcase classname="next steps title: &#x22;Microsoft 365 Account&#x22;" name="condition: selected" time="0.001"/>
<testcase classname="next steps title: &#x22;Microsoft 365 Account&#x22;" name="condition: not selected - no project opened" time="0"/>
<testcase classname="next steps title: &#x22;Microsoft 365 Account&#x22;" name="condition: not selected - prerequisite check failed" time="0"/>
<testcase classname="next steps title: &#x22;Microsoft 365 Account&#x22;" name="condition: not selected - did no action before" time="0"/>
<testcase classname="next steps title: &#x22;Microsoft 365 Account&#x22;" name="condition: not selected - debug succeed before" time="0.001"/>
<testcase classname="next steps title: &#x22;Microsoft 365 Account&#x22;" name="condition: not selected - log into M365 account" time="0.001"/>
<testcase classname="next steps title: &#x22;Microsoft 365 Developer Program&#x22;" name="condition: selected" time="0"/>
<testcase classname="next steps title: &#x22;Microsoft 365 Developer Program&#x22;" name="condition: not selected - no project opened" time="0"/>
<testcase classname="next steps title: &#x22;Microsoft 365 Developer Program&#x22;" name="condition: not selected - prerequisite check failed" time="0"/>
<testcase classname="next steps title: &#x22;Microsoft 365 Developer Program&#x22;" name="condition: not selected - did no action before" time="0"/>
<testcase classname="next steps title: &#x22;Microsoft 365 Developer Program&#x22;" name="condition: not selected - debug succeed before" time="0"/>
<testcase classname="next steps title: &#x22;Microsoft 365 Developer Program&#x22;" name="condition: not selected - log into M365 account" time="0.001"/>
<testcase classname="next steps title: &#x22;Preview in Microsoft Teams&#x22;" name="condition: selected" time="0"/>
<testcase classname="next steps title: &#x22;Preview in Microsoft Teams&#x22;" name="condition: not selected - no project opened" time="0"/>
<testcase classname="next steps title: &#x22;Preview in Microsoft Teams&#x22;" name="condition: not selected - prerequisite check failed" time="0"/>
<testcase classname="next steps title: &#x22;Preview in Microsoft Teams&#x22;" name="condition: not selected - did no action before" time="0"/>
<testcase classname="next steps title: &#x22;Preview in Microsoft Teams&#x22;" name="condition: not selected - debug succeed before" time="0.001"/>
<testcase classname="next steps title: &#x22;Preview in Microsoft Teams&#x22;" name="condition: not selected - not log into M365 account" time="0.001"/>
<testcase classname="next steps title: &#x22;How to Extend&#x22;" name="description" time="0"/>
<testcase classname="next steps title: &#x22;How to Extend&#x22;" name="condition: selected" time="0"/>
<testcase classname="next steps title: &#x22;How to Extend&#x22;" name="condition: not selected - no project opened" time="0"/>
<testcase classname="next steps title: &#x22;How to Extend&#x22;" name="condition: not selected - prerequisite check failed" time="0.001"/>
<testcase classname="next steps title: &#x22;How to Extend&#x22;" name="condition: not selected - did no action before" time="0"/>
<testcase classname="next steps title: &#x22;How to Extend&#x22;" name="condition: not selected - debug failed before" time="0"/>
<testcase classname="next steps title: &#x22;How to Extend&#x22;" name="condition: not selected - had no readme content" time="0"/>
<testcase classname="next steps title: &#x22;CI/CD&#x22;" name="condition: selected" time="0"/>
<testcase classname="next steps title: &#x22;CI/CD&#x22;" name="condition: not selected - no project opened" time="0"/>
<testcase classname="next steps title: &#x22;CI/CD&#x22;" name="condition: not selected - prerequisite check failed" time="0.001"/>
<testcase classname="next steps title: &#x22;CI/CD&#x22;" name="condition: not selected - did no action before" time="0"/>
<testcase classname="next steps title: &#x22;CI/CD&#x22;" name="condition: not selected - debug failed before" time="0"/>
<testcase classname="next steps title: &#x22;Azure Account&#x22;" name="condition: selected" time="0.001"/>
<testcase classname="next steps title: &#x22;Azure Account&#x22;" name="condition: not selected - no project opened" time="0"/>
<testcase classname="next steps title: &#x22;Azure Account&#x22;" name="condition: not selected - prerequisite check failed" time="0"/>
<testcase classname="next steps title: &#x22;Azure Account&#x22;" name="condition: not selected - did no action before" time="0.001"/>
<testcase classname="next steps title: &#x22;Azure Account&#x22;" name="condition: not selected - debug failed before" time="0"/>
<testcase classname="next steps title: &#x22;Azure Account&#x22;" name="condition: not selected - provision succeeded before" time="0"/>
<testcase classname="next steps title: &#x22;Azure Account&#x22;" name="condition: not selected - not log into Azure account" time="0"/>
<testcase classname="next steps title: &#x22;Provision Azure resources&#x22;" name="condition: selected" time="0.001"/>
<testcase classname="next steps title: &#x22;Provision Azure resources&#x22;" name="condition: not selected - no project opened" time="0"/>
<testcase classname="next steps title: &#x22;Provision Azure resources&#x22;" name="condition: not selected - prerequisite check failed" time="0"/>
<testcase classname="next steps title: &#x22;Provision Azure resources&#x22;" name="condition: not selected - did no action before" time="0.001"/>
<testcase classname="next steps title: &#x22;Provision Azure resources&#x22;" name="condition: not selected - debug failed before" time="0.001"/>
<testcase classname="next steps title: &#x22;Provision Azure resources&#x22;" name="condition: not selected - provision succeeded before" time="0.001"/>
<testcase classname="next steps title: &#x22;Provision Azure resources&#x22;" name="condition: not selected - not log into Azure Account" time="0.001"/>
<testcase classname="next steps title: &#x22;Deploy to Cloud&#x22;" name="condition: selected" time="0.001"/>
<testcase classname="next steps title: &#x22;Deploy to Cloud&#x22;" name="condition: not selected - no project opened" time="0"/>
<testcase classname="next steps title: &#x22;Deploy to Cloud&#x22;" name="condition: not selected - prerequisite check failed" time="0"/>
<testcase classname="next steps title: &#x22;Deploy to Cloud&#x22;" name="condition: not selected - did no action before" time="0"/>
<testcase classname="next steps title: &#x22;Deploy to Cloud&#x22;" name="condition: not selected - debug failed before" time="0.001"/>
<testcase classname="next steps title: &#x22;Deploy to Cloud&#x22;" name="condition: not selected - provision failed before" time="0.001"/>
<testcase classname="next steps title: &#x22;Deploy to Cloud&#x22;" name="condition: not selected - deploy succeeded before" time="0.001"/>
<testcase classname="next steps title: &#x22;Publish the App&#x22;" name="condition: selected" time="0"/>
<testcase classname="next steps title: &#x22;Publish the App&#x22;" name="condition: not selected - no project opened" time="0.001"/>
<testcase classname="next steps title: &#x22;Publish the App&#x22;" name="condition: not selected - prerequisite check failed" time="0"/>
<testcase classname="next steps title: &#x22;Publish the App&#x22;" name="condition: not selected - did no action before" time="0"/>
<testcase classname="next steps title: &#x22;Publish the App&#x22;" name="condition: not selected - debug failed before" time="0.001"/>
<testcase classname="next steps title: &#x22;Publish the App&#x22;" name="condition: not selected - provision failed before" time="0.001"/>
<testcase classname="next steps title: &#x22;Publish the App&#x22;" name="condition: not selected - deploy failed before" time="0.001"/>
<testcase classname="next steps title: &#x22;Publish the App&#x22;" name="condition: not selected - published before" time="0.001"/>
<testcase classname="next steps title: &#x22;Remote Preview&#x22;" name="condition: selected" time="0.001"/>
<testcase classname="next steps title: &#x22;Remote Preview&#x22;" name="condition: not selected - no project opened" time="0"/>
<testcase classname="next steps title: &#x22;Remote Preview&#x22;" name="condition: not selected - prerequisite check failed" time="0"/>
<testcase classname="next steps title: &#x22;Remote Preview&#x22;" name="condition: not selected - did no action before" time="0.001"/>
<testcase classname="next steps title: &#x22;Remote Preview&#x22;" name="condition: not selected - debug failed before" time="0.001"/>
<testcase classname="next steps title: &#x22;Remote Preview&#x22;" name="condition: not selected - provision failed before" time="0.001"/>
<testcase classname="next steps title: &#x22;Remote Preview&#x22;" name="condition: not selected - deploy failed before" time="0.001"/>
<testcase classname="chat followup provider getInstance()" name="create instance if not existed" time="0"/>
<testcase classname="chat followup provider clearFollowups()" name="clear followups" time="0"/>
<testcase classname="chat followup provider addFollowups()" name="add followups" time="0"/>
<testcase classname="chat followup provider provideFollowups()" name="provide default followup if empty" time="0"/>
<testcase classname="chat followup provider provideFollowups()" name="provide followups" time="0"/>
<testcase classname="chat handlers chatRequestHandler()" name="call createCommandHandler" time="0.001"/>
<testcase classname="chat handlers chatRequestHandler()" name="call nextStepCommandHandler" time="0.001"/>
<testcase classname="chat handlers chatRequestHandler()" name="call defaultHandler" time="0.002"/>
<testcase classname="chat handlers chatExecuteCommandHandler()" name="execute commands" time="0.001"/>
<testcase classname="chat handlers chatExecuteCommandHandler()" name="execute commands with undefined chat telemetry data" time="0.001"/>
<testcase classname="chat handlers openUrlCommandHandler()" name="open external" time="0.001"/>
<testcase classname="chat handlers handleFeedback()" name="handle feedback with undefined request id and command" time="0.001"/>
<testcase classname="chat handlers handleFeedback()" name="handle feedback with request id and command" time="0.001"/>
<testcase classname="ChatTelemetryData" name="constructor" time="0"/>
<testcase classname="ChatTelemetryData" name="properties" time="0"/>
<testcase classname="ChatTelemetryData" name="createByParticipant" time="0.001"/>
<testcase classname="ChatTelemetryData" name="extendBy" time="0.001"/>
<testcase classname="ChatTelemetryData" name="markComplete" time="0.001"/>
<testcase classname="ChatTelemetryData measurements" name="after init" time="0.001"/>
<testcase classname="ChatTelemetryData measurements" name="after complete" time="0.001"/>
<testcase classname="ChatTelemetryData get" name="unknow requestId" time="0"/>
<testcase classname="ChatTelemetryData get" name="known requestId" time="0"/>
<testcase classname="Tokenizer" name="getInstance" time="0"/>
<testcase classname="Tokenizer" name="tokenize" time="0.284"/>
<testcase classname="Tokenizer tokenLength" name="empty content" time="0"/>
<testcase classname="Tokenizer tokenLength" name="non-empty content" time="0.376"/>
<testcase classname="chat utils verbatimCopilotInteraction()" name="outputs result from LLM" time="0.001"/>
<testcase classname="chat utils getCopilotResponseAsString()" name="returns result as string from LLM" time="0.001"/>
<testcase classname="chat utils getSampleDownloadUrlInfo()" name="returns download Url" time="0.001"/>
<testcase classname="chat utils getSampleDownloadUrlInfo()" name="throws error if not found" time="0.001"/>
<testcase classname="chat utils countMessageTokens()" name="count empty message" time="0"/>
<testcase classname="chat utils countMessageTokens()" name="count message without name" time="0"/>
<testcase classname="chat utils countMessageTokens()" name="count message with name" time="0"/>
<testcase classname="chat utils countMessagesTokens()" name="count empty messages" time="0"/>
<testcase classname="chat utils countMessagesTokens()" name="count messages" time="0"/>
<testcase classname="Manifest codelens" name="Template codelens - V3" time="0.001"/>
<testcase classname="Manifest codelens" name="ResolveEnvironmentVariableCodelens" time="0.001"/>
<testcase classname="Manifest codelens" name="ResolveEnvironmentVariableCodelens for AAD manifest" time="0.001"/>
<testcase classname="Manifest codelens" name="ComputeTemplateCodeLenses for AAD manifest template" time="0.004"/>
<testcase classname="Manifest codelens" name="ComputeTemplateCodeLenses for aad manifest" time="0.003"/>
<testcase classname="Manifest codelens" name="ComputeTemplateCodeLenses for aad manifest if template not exist" time="0.002"/>
<testcase classname="Manifest codelens" name="PermissionsJsonFileCodeLensProvider for Microsoft Entra manifest template" time="0.001"/>
<testcase classname="Crypto CodeLensProvider" name="envData codelens" time="0.001"/>
<testcase classname="Crypto CodeLensProvider" name="hides when command is running" time="0"/>
<testcase classname="API ME CodeLensProvider" name="Add API" time="0.001"/>
<testcase classname="API ME CodeLensProvider" name="Do not show codelens for non-copilot plugin project" time="0"/>
<testcase classname="Api plugin CodeLensProvider" name="Add API" time="0.001"/>
<testcase classname="Api plugin CodeLensProvider" name="Do not show codelens for if not api spec file" time="0.001"/>
<testcase classname="Api plugin CodeLensProvider" name="Do not show codelens for if Teams manifest not exist" time="0.001"/>
<testcase classname="Api plugin CodeLensProvider" name="Do not show codelens for if not API plugin project" time="0.001"/>
<testcase classname="teamsapp.yml CodeLensProvider" name="should work with correct teamsapp.yml" time="0.001"/>
<testcase classname="manifest*.xml CodeLensProvider" name="should work with correct manifest.xml" time="0.001"/>
<testcase classname="Command Controller" name="directly call command callback" time="0.001"/>
<testcase classname="Command Controller" name="refresh UI when receiving lock events" time="0.001"/>
<testcase classname="Command Controller" name="refresh UI when receiving unlock events" time="0.001"/>
<testcase classname="CommonUtils getPackageVersion" name="alpha version" time="0"/>
<testcase classname="CommonUtils getPackageVersion" name="beta version" time="0"/>
<testcase classname="CommonUtils getPackageVersion" name="rc version" time="0"/>
<testcase classname="CommonUtils getPackageVersion" name="formal version" time="0"/>
<testcase classname="CommonUtils openFolderInExplorer" name="happy path" time="0"/>
<testcase classname="CommonUtils isFeatureFlag" name="return true when enabled" time="0"/>
<testcase classname="CommonUtils isFeatureFlag" name="return false when disabled" time="0"/>
<testcase classname="CommonUtils sleep" name="sleep should be accurate" time="0.001"/>
<testcase classname="CommonUtils os assertion" name="should return exactly result according to os.type" time="0.001"/>
<testcase classname="CommonUtils getProjectId" name="happy path" time="0.001"/>
<testcase classname="CommonUtils getProjectId" name="workspaceUri is undefined" time="0"/>
<testcase classname="CommonUtils getProjectId" name="return error" time="0"/>
<testcase classname="CommonUtils getProjectId" name="throw error" time="0"/>
<testcase classname="CommonUtils getAppName" name="happy path" time="0.001"/>
<testcase classname="CommonUtils getAppName" name="workspaceUri is undefined" time="0"/>
<testcase classname="CommonUtils getAppName" name="return error" time="0"/>
<testcase classname="CommonUtils getAppName" name="throw error" time="0"/>
<testcase classname="CommonUtils getAppName" name="should return undefined if getTeamsAppName returns empty string" time="0"/>
<testcase classname="CommonUtils getTeamsAppTelemetryInfoByEnv" name="happy path" time="0.001"/>
<testcase classname="CommonUtils getTeamsAppTelemetryInfoByEnv" name="isValidProject is false" time="0.001"/>
<testcase classname="CommonUtils getTeamsAppTelemetryInfoByEnv" name="return error" time="0.001"/>
<testcase classname="CommonUtils getTeamsAppTelemetryInfoByEnv" name="throw error" time="0"/>
<testcase classname="CommonUtils isTriggerFromWalkThrough" name="Should return false with no args" time="0"/>
<testcase classname="CommonUtils isTriggerFromWalkThrough" name="Should return false with empty args" time="0"/>
<testcase classname="CommonUtils isTriggerFromWalkThrough" name="Should return true with walkthrough args" time="0"/>
<testcase classname="CommonUtils isTriggerFromWalkThrough" name="Should return true with notification args" time="0"/>
<testcase classname="CommonUtils isTriggerFromWalkThrough" name="Should return false with other args" time="0.001"/>
<testcase classname="CommonUtils getTriggerFromProperty" name="Should return cmp with no args" time="0"/>
<testcase classname="CommonUtils getTriggerFromProperty" name="Should return cmp with empty args" time="0"/>
<testcase classname="CommonUtils getTriggerFromProperty" name="Should return Auto" time="0"/>
<testcase classname="CommonUtils getTriggerFromProperty" name="Should return CodeLens" time="0"/>
<testcase classname="CommonUtils getTriggerFromProperty" name="Should return EditorTitle" time="0"/>
<testcase classname="CommonUtils getTriggerFromProperty" name="Should return Webview" time="0"/>
<testcase classname="CommonUtils getTriggerFromProperty" name="Should return Notification" time="0"/>
<testcase classname="CommonUtils getTriggerFromProperty" name="Should return Other" time="0"/>
<testcase classname="CommonUtils getTriggerFromProperty" name="Should return QuickPick" time="0"/>
<testcase classname="CommonUtils getTriggerFromProperty" name="Should return SideBar" time="0"/>
<testcase classname="CommonUtils getTriggerFromProperty" name="Should return TreeView" time="0"/>
<testcase classname="CommonUtils getTriggerFromProperty" name="Should return Unknow" time="0"/>
<testcase classname="CommonUtils getTriggerFromProperty" name="Should return ViewTitleNavigation" time="0"/>
<testcase classname="CommonUtils getTriggerFromProperty" name="Should return WalkThrough" time="0"/>
<testcase classname="CommonUtils getProvisionSucceedFromEnv" name="returns false if teamsAppId is empty" time="0.002"/>
<testcase classname="CommonUtils getProvisionSucceedFromEnv" name="returns true if teamsAppId is not empty" time="0.002"/>
<testcase classname="CommonUtils getProvisionSucceedFromEnv" name="returns false if teamsAppId has error" time="0.001"/>
<testcase classname="CommonUtils hasAdaptiveCardInWorkspace()" name="no workspace" time="0"/>
<testcase classname="CommonUtils hasAdaptiveCardInWorkspace()" name="happy path" time="0.013"/>
<testcase classname="CommonUtils hasAdaptiveCardInWorkspace()" name="hasAdaptiveCardInWorkspace() no adaptive card file" time="0.003"/>
<testcase classname="CommonUtils hasAdaptiveCardInWorkspace()" name="hasAdaptiveCardInWorkspace() very large adaptive card file" time="0.008"/>
<testcase classname="CommonUtils anonymizeFilePaths()" name="undefined" time="0"/>
<testcase classname="CommonUtils anonymizeFilePaths()" name="happy path 1" time="0"/>
<testcase classname="CommonUtils anonymizeFilePaths()" name="happy path 2" time="0"/>
<testcase classname="CommonUtils anonymizeFilePaths()" name="happy path 3" time="0"/>
<testcase classname="CommonUtils getLocalDebugMessageTemplate()" name="Test Tool enabled in Windows platform" time="0"/>
<testcase classname="CommonUtils getLocalDebugMessageTemplate()" name="Test Tool disabled in Windows platform" time="0"/>
<testcase classname="CommonUtils getLocalDebugMessageTemplate()" name="Test Tool enabled in non-Windows platform" time="0"/>
<testcase classname="CommonUtils getLocalDebugMessageTemplate()" name="Test Tool disabled in non-Windows platform" time="0"/>
<testcase classname="CommonUtils getLocalDebugMessageTemplate()" name="No workspace folder" time="0.001"/>
<testcase classname="configMgr loadLogLevel" name="Debug" time="0.001"/>
<testcase classname="configMgr loadLogLevel" name="Verbose" time="0.001"/>
<testcase classname="configMgr loadLogLevel" name="Info" time="0"/>
<testcase classname="configMgr changeConfigCallback" name="happy" time="0"/>
<testcase classname="configMgr loadConfigs" name="happy" time="0"/>
<testcase classname="configMgr loadFeatureFlags" name="happy" time="0"/>
<testcase classname="configMgr registerConfigChangeCallback" name="happy" time="0"/>
<testcase classname="openWelcomePageAfterExtensionInstallation()" name="will not open welcome page if shown before" time="0"/>
<testcase classname="openWelcomePageAfterExtensionInstallation()" name="opens welcome page if not shown before" time="0.001"/>
<testcase classname="invokeTeamsAgent" name="no need to install Github Copilot" time="0.002"/>
<testcase classname="invokeTeamsAgent" name="install Github Copilot and invoke Teams Agent" time="0.004"/>
<testcase classname="invokeTeamsAgent" name="install Github Copilot, wait and invoke Teams Agent" time="0.001"/>
<testcase classname="invokeTeamsAgent" name="Install github copilot extension error" time="0.007"/>
<testcase classname="invokeTeamsAgent" name="Install github copilot extension cancel" time="0.002"/>
<testcase classname="invokeTeamsAgent" name="Verify installation error" time="0.002"/>
<testcase classname="invokeTeamsAgent" name="invoke Copilot chat error" time="0.005"/>
<testcase classname="ExtTelemetry setHasSentTelemetry" name="query-expfeature" time="0"/>
<testcase classname="ExtTelemetry setHasSentTelemetry" name="other-event" time="0"/>
<testcase classname="ExtTelemetry stageToEvent" name="Stage.create" time="0"/>
<testcase classname="ExtTelemetry stageToEvent" name="Stage.provision" time="0"/>
<testcase classname="ExtTelemetry stageToEvent" name="Stage.deploy" time="0"/>
<testcase classname="ExtTelemetry stageToEvent" name="Stage.publish" time="0"/>
<testcase classname="ExtTelemetry stageToEvent" name="Stage.creatEnv" time="0"/>
<testcase classname="ExtTelemetry stageToEvent" name="Stage.addWebpart" time="0"/>
<testcase classname="ExtTelemetry stageToEvent" name="Stage.copilotPluginAddAPI" time="0"/>
<testcase classname="ExtTelemetry stageToEvent" name="unknown" time="0"/>
<testcase classname="ExtTelemetry Send Telemetry" name="sendTelemetryEvent" time="0"/>
<testcase classname="ExtTelemetry Send Telemetry" name="sendTelemetryErrorEvent" time="0.003"/>
<testcase classname="ExtTelemetry Send Telemetry" name="sendTelemetryException" time="0"/>
<testcase classname="ExtTelemetry deactivate event" name="cacheTelemetryEventAsync" time="0.002"/>
<testcase classname="ExtTelemetry deactivate event" name="sendCachedTelemetryEventsAsync" time="0.001"/>
<testcase classname="Global Variables isSPFxProject" name="return false for non-spfx project" time="0.001"/>
<testcase classname="Global Variables isSPFxProject" name="return true for spfx project" time="0.002"/>
<testcase classname="Global Variables isSPFxProject" name="set uri handler" time="0"/>
<testcase classname="Global Variables isSPFxProject" name="set log folder" time="0.001"/>
<testcase classname="Global Variables isSPFxProject" name="set commandIsRunning" time="0"/>
<testcase classname="Global Variables isSPFxProject" name="unsetIsTeamsFxProject()" time="0"/>
<testcase classname="handlers" name="getSystemInputs()" time="0.001"/>
<testcase classname="handlers" name="getSettingsVersion" time="0.001"/>
<testcase classname="handlers" name="addFileSystemWatcher detect SPFx project" time="0.003"/>
<testcase classname="handlers" name="addFileSystemWatcher in invalid project" time="0.001"/>
<testcase classname="handlers" name="sendSDKVersionTelemetry" time="0.001"/>
<testcase classname="handlers" name="updateAutoOpenGlobalKey" time="0.001"/>
<testcase classname="handlers" name="azureAccountSignOutHelpHandler()" time="0"/>
<testcase classname="handlers" name="openAccountHelpHandler()" time="0.001"/>
<testcase classname="handlers" name="openWelcomeHandler" time="0"/>
<testcase classname="handlers" name="openWelcomeHandler with chat" time="0"/>
<testcase classname="handlers" name="openSurveyHandler" time="0.001"/>
<testcase classname="handlers" name="openSamplesHandler" time="0.001"/>
<testcase classname="handlers" name="openReadMeHandler" time="0.001"/>
<testcase classname="handlers" name="openReadMeHandler - create project" time="0.019"/>
<testcase classname="handlers" name="openReadMeHandler - open folder" time="0.001"/>
<testcase classname="handlers" name="openReadMeHandler - function notification bot template" time="0.002"/>
<testcase classname="handlers" name="openReadMeHandler - restify notification bot template" time="0.002"/>
<testcase classname="handlers" name="signOutM365" time="0.001"/>
<testcase classname="handlers" name="signOutAzure" time="0"/>
<testcase classname="handlers" name="downloadSample" time="0.001"/>
<testcase classname="handlers" name="downloadSample - error" time="0.001"/>
<testcase classname="handlers" name="downloadSample - LoginFailureError" time="0.001"/>
<testcase classname="handlers" name="deployAadAppmanifest" time="0.001"/>
<testcase classname="handlers" name="showError" time="0.021"/>
<testcase classname="handlers" name="showError - similar issues" time="0.001"/>
<testcase classname="handlers" name="showError - user error - recommend test tool" time="0.002"/>
<testcase classname="handlers" name="showError - system error - recommend test tool" time="0.002"/>
<testcase classname="handlers" name="refreshSPFxTreeOnFileChanged" time="0"/>
<testcase classname="handlers activate()" name="No globalState error" time="0.001"/>
<testcase classname="handlers activate()" name="Valid project" time="0.003"/>
<testcase classname="handlers activate()" name="throws error" time="0.002"/>
<testcase classname="handlers command handlers" name="createNewProjectHandler()" time="0.003"/>
<testcase classname="handlers command handlers" name="createNewProjectHandler - invoke Copilot" time="0.002"/>
<testcase classname="handlers command handlers" name="provisionHandler()" time="0.001"/>
<testcase classname="handlers command handlers" name="deployHandler()" time="0.001"/>
<testcase classname="handlers command handlers" name="publishHandler()" time="0.001"/>
<testcase classname="handlers command handlers" name="buildPackageHandler()" time="0.003"/>
<testcase classname="handlers command handlers" name="validateManifestHandler() - app package" time="0.002"/>
<testcase classname="handlers command handlers" name="API ME: copilotPluginAddAPIHandler()" time="0.001"/>
<testcase classname="handlers command handlers" name="API Plugin: copilotPluginAddAPIHandler()" time="0.001"/>
<testcase classname="handlers command handlers" name="treeViewPreviewHandler() - previewWithManifest error" time="0.004"/>
<testcase classname="handlers command handlers" name="treeViewPreviewHandler() - happy path" time="0.001"/>
<testcase classname="handlers command handlers" name="selectTutorialsHandler()" time="0.003"/>
<testcase classname="handlers command handlers" name="selectTutorialsHandler() for SPFx projects - v3" time="0.001"/>
<testcase classname="handlers runCommand()" name="openConfigStateFile() - InvalidArgs" time="0.012"/>
<testcase classname="handlers runCommand()" name="openConfigStateFile() - noOpenWorkspace" time="0.002"/>
<testcase classname="handlers runCommand()" name="openConfigStateFile() - invalidProject" time="0.007"/>
<testcase classname="handlers runCommand()" name="openConfigStateFile() - invalid target environment" time="0.01"/>
<testcase classname="handlers runCommand()" name="openConfigStateFile() - valid args" time="0.011"/>
<testcase classname="handlers runCommand()" name="openConfigStateFile() - invalid env folder" time="0.009"/>
<testcase classname="handlers runCommand()" name="openConfigStateFile() - success" time="0.009"/>
<testcase classname="handlers runCommand()" name="create sample with projectid" time="0.001"/>
<testcase classname="handlers runCommand()" name="create from scratch without projectid" time="0.001"/>
<testcase classname="handlers runCommand()" name="provisionResources" time="0"/>
<testcase classname="handlers runCommand()" name="provisionResources - local" time="0.001"/>
<testcase classname="handlers runCommand()" name="deployArtifacts" time="0.001"/>
<testcase classname="handlers runCommand()" name="deployArtifacts - local" time="0.002"/>
<testcase classname="handlers runCommand()" name="deployAadManifest" time="0.001"/>
<testcase classname="handlers runCommand()" name="deployAadManifest happy path" time="0.001"/>
<testcase classname="handlers runCommand()" name="localDebug" time="0.002"/>
<testcase classname="handlers runCommand()" name="publishApplication" time="0.001"/>
<testcase classname="handlers runCommand()" name="createEnv" time="0.001"/>
<testcase classname="handlers detectVsCodeEnv()" name="locally run" time="0.001"/>
<testcase classname="handlers detectVsCodeEnv()" name="Remotely run" time="0.001"/>
<testcase classname="handlers decryptSecret" name="successfully update secret" time="0.003"/>
<testcase classname="handlers decryptSecret" name="failed to update due to corrupted secret" time="0.002"/>
<testcase classname="handlers permission v3" name="happy path: grant permission" time="0.002"/>
<testcase classname="handlers permission v3" name="happy path: list collaborator" time="0.001"/>
<testcase classname="handlers permission v3" name="happy path: list collaborator throws error" time="0.003"/>
<testcase classname="handlers permission v3" name="happy path: list collaborator throws login error" time="0.002"/>
<testcase classname="handlers permission v3" name="User Cancel" time="0"/>
<testcase classname="handlers checkUpgrade" name="calls phantomMigrationV3 with isNonmodalMessage when auto triggered" time="0.001"/>
<testcase classname="handlers checkUpgrade" name="calls phantomMigrationV3 with skipUserConfirm trigger from sideBar and command palette" time="0.001"/>
<testcase classname="handlers checkUpgrade" name="shows error message when phantomMigrationV3 fails" time="0.002"/>
<testcase classname="handlers downloadSampleApp" name="happy path" time="0.023"/>
<testcase classname="handlers downloadSampleApp" name="has error" time="0.002"/>
<testcase classname="handlers getDotnetPathHandler" name="dotnet is installed" time="0.001"/>
<testcase classname="handlers getDotnetPathHandler" name="dotnet is not installed" time="0.001"/>
<testcase classname="handlers getDotnetPathHandler" name="failed to get dotnet path" time="0.002"/>
<testcase classname="handlers scaffoldFromDeveloperPortalHandler" name="missing args" time="0.001"/>
<testcase classname="handlers scaffoldFromDeveloperPortalHandler" name="incorrect number of args" time="0"/>
<testcase classname="handlers scaffoldFromDeveloperPortalHandler" name="general error when signing in M365" time="0.003"/>
<testcase classname="handlers scaffoldFromDeveloperPortalHandler" name="error when signing M365" time="0.001"/>
<testcase classname="handlers scaffoldFromDeveloperPortalHandler" name="error when signing in M365 but missing display message" time="0.001"/>
<testcase classname="handlers scaffoldFromDeveloperPortalHandler" name="failed to get teams app" time="0.002"/>
<testcase classname="handlers scaffoldFromDeveloperPortalHandler" name="happy path" time="0.003"/>
<testcase classname="handlers publishInDeveloperPortalHandler" name="publish in developer portal - success" time="0.002"/>
<testcase classname="handlers publishInDeveloperPortalHandler" name="publish in developer portal - cancelled" time="0.003"/>
<testcase classname="handlers publishInDeveloperPortalHandler" name="select file error" time="0.002"/>
<testcase classname="handlers openAppManagement" name="open link with loginHint" time="0.001"/>
<testcase classname="handlers openAppManagement" name="open link without loginHint" time="0.001"/>
<testcase classname="handlers installAppInTeams" name="happy path" time="0.001"/>
<testcase classname="handlers installAppInTeams" name="migration error" time="0.001"/>
<testcase classname="handlers callBackFunctions" name="checkCopilotCallback()" time="0.001"/>
<testcase classname="handlers callBackFunctions" name="checkSideloadingCallback()" time="0.001"/>
<testcase classname="handlers callBackFunctions" name="signinAzureCallback" time="0"/>
<testcase classname="handlers callBackFunctions" name="signinAzureCallback with error" time="0"/>
<testcase classname="handlers callBackFunctions" name="signinAzureCallback with cancel error" time="0"/>
<testcase classname="handlers validateAzureDependenciesHandler" name="happy path" time="0"/>
<testcase classname="handlers validateAzureDependenciesHandler" name="migration error" time="0"/>
<testcase classname="handlers validateLocalPrerequisitesHandler" name="happy path" time="0"/>
<testcase classname="handlers validateLocalPrerequisitesHandler" name="migration error" time="0"/>
<testcase classname="handlers backendExtensionsInstallHandler" name="happy path" time="0"/>
<testcase classname="handlers backendExtensionsInstallHandler" name="migration error" time="0.001"/>
<testcase classname="handlers preDebugCheckHandler" name="happy path" time="0"/>
<testcase classname="handlers preDebugCheckHandler" name="happy path" time="0.001"/>
<testcase classname="handlers migrateTeamsTabAppHandler" name="happy path" time="0.004"/>
<testcase classname="handlers migrateTeamsTabAppHandler" name="happy path: failed files" time="0.003"/>
<testcase classname="handlers migrateTeamsTabAppHandler" name="error" time="0.003"/>
<testcase classname="handlers migrateTeamsTabAppHandler" name="user cancel" time="0.002"/>
<testcase classname="handlers migrateTeamsTabAppHandler" name="user cancel: skip folder selection" time="0.002"/>
<testcase classname="handlers migrateTeamsTabAppHandler" name="no change in package.json" time="0.001"/>
<testcase classname="handlers migrateTeamsManifestHandler" name="happy path" time="0.002"/>
<testcase classname="handlers migrateTeamsManifestHandler" name="user cancel: skip file selection" time="0.001"/>
<testcase classname="handlers migrateTeamsManifestHandler" name="error" time="0.002"/>
<testcase classname="handlers openDocumentHandler" name="opens upgrade guide when clicked from sidebar" time="0.001"/>
<testcase classname="handlers getPathDelimiterHandler" name="happy path" time="0.001"/>
<testcase classname="handlers others" name="cmpAccountsHandler" time="0.003"/>
<testcase classname="handlers others" name="updatePreviewManifest" time="0.003"/>
<testcase classname="openPreviewAadFile" name="manifest file not exists" time="0.003"/>
<testcase classname="openPreviewAadFile" name="happy path" time="0.002"/>
<testcase classname="editAadManifestTemplate" name="happy path" time="0.001"/>
<testcase classname="editAadManifestTemplate" name="happy path: no parameter" time="0.001"/>
<testcase classname="editAadManifestTemplate" name="happy path: workspaceUri is undefined" time="0.001"/>
<testcase classname="autoOpenProjectHandler" name="opens walk through" time="0.002"/>
<testcase classname="autoOpenProjectHandler" name="opens README" time="0.003"/>
<testcase classname="autoOpenProjectHandler" name="opens sample README" time="0.001"/>
<testcase classname="autoOpenProjectHandler" name="opens README and show APIE ME warnings successfully" time="0.002"/>
<testcase classname="autoOpenProjectHandler" name="opens README and show copilot plugin warnings successfully" time="0.002"/>
<testcase classname="autoOpenProjectHandler" name="skip show warnings if parsing error" time="0.003"/>
<testcase classname="autoOpenProjectHandler" name="skip show warnings if cannot get manifest" time="0.002"/>
<testcase classname="autoOpenProjectHandler" name="skip show warnings if get plugin api spec error" time="0.002"/>
<testcase classname="autoOpenProjectHandler" name="auto install dependency" time="0.001"/>
<testcase classname="autoOpenProjectHandler" name="openFolderHandler()" time="0.001"/>
<testcase classname="autoOpenProjectHandler" name="runUserTask() - error" time="0.002"/>
<testcase classname="autoOpenProjectHandler" name="validateGetStartedPrerequisitesHandler() - error" time="0.002"/>
<testcase classname="autoOpenProjectHandler" name="registerAccountMenuCommands() - signedinM365" time="0.002"/>
<testcase classname="autoOpenProjectHandler" name="registerAccountMenuCommands() - signedinAzure" time="0.001"/>
<testcase classname="autoOpenProjectHandler" name="registerAccountMenuCommands() - error" time="0.001"/>
<testcase classname="autoOpenProjectHandler" name="openSampleReadmeHandler() - trigger from walkthrough" time="0"/>
<testcase classname="autoOpenProjectHandler" name="showLocalDebugMessage()" time="0.004"/>
<testcase classname="autoOpenProjectHandler" name="installAdaptiveCardExt()" time="0.002"/>
<testcase classname="autoOpenProjectHandler" name="signInAzure()" time="0"/>
<testcase classname="autoOpenProjectHandler" name="signInM365()" time="0"/>
<testcase classname="autoOpenProjectHandler" name="openLifecycleTreeview() - TeamsFx Project" time="0.001"/>
<testcase classname="autoOpenProjectHandler" name="openLifecycleTreeview() - non-TeamsFx Project" time="0.001"/>
<testcase classname="autoOpenProjectHandler" name="treeViewDebugInTestToolHandler" time="0.001"/>
<testcase classname="autoOpenProjectHandler" name="messageDebugInTestToolHandler" time="0.001"/>
<testcase classname="autoOpenProjectHandler acpInstalled()" name="already installed" time="0.001"/>
<testcase classname="autoOpenProjectHandler acpInstalled()" name="not installed" time="0.001"/>
<testcase classname="Manifest template hover - V3" name="hover - match" time="0.001"/>
<testcase classname="Manifest template hover - V3" name="hover - local" time="0"/>
<testcase classname="Manifest template hover - V3" name="hover-undefined" time="0"/>
<testcase classname="Manifest template hover - V3" name="hover - no value" time="0"/>
<testcase classname="officeDevHandler" name="openOfficePartnerCenterHandler" time="0.001"/>
<testcase classname="officeDevHandler" name="openGetStartedLinkHandler" time="0.001"/>
<testcase classname="officeDevHandler" name="openOfficeDevDeployHandler" time="0.001"/>
<testcase classname="officeDevHandler" name="publishToAppSourceHandler" time="0.001"/>
<testcase classname="officeDevHandler" name="openDebugLinkHandler" time="0.001"/>
<testcase classname="officeDevHandler" name="openDocumentHandler" time="0.001"/>
<testcase classname="officeDevHandler" name="openDevelopmentLinkHandler" time="0.001"/>
<testcase classname="officeDevHandler" name="openLifecycleLinkHandler" time="0.001"/>
<testcase classname="officeDevHandler" name="openHelpFeedbackLinkHandler" time="0"/>
<testcase classname="officeDevHandler" name="openReportIssues" time="0"/>
<testcase classname="officeDevHandler" name="openScriptLabLink" time="0"/>
<testcase classname="officeDevHandler" name="openPromptLibraryLink" time="0.001"/>
<testcase classname="officeDevHandler" name="popupOfficeAddInDependenciesMessage" time="0.001"/>
<testcase classname="officeDevHandler" name="checkOfficeAddInInstalled" time="0.001"><failure>expected false to be true

      + expected - actual

      -false
      +true
      
AssertionError: expected false to be true
    at C:\Users\ruiqiyang\Desktop\TTK_Telemetry\TeamsFx\packages\vscode-extension\test\extension\officeDevHandler.test.ts:140:17
    at Generator.next (&#x3C;anonymous&#x3E;)
    at C:\Users\ruiqiyang\Desktop\TTK_Telemetry\TeamsFx\packages\vscode-extension\test\extension\officeDevHandler.test.ts:8:71
    at new Promise (&#x3C;anonymous&#x3E;)
    at __awaiter (test\extension\officeDevHandler.test.ts:4:12)
    at Context.&#x3C;anonymous&#x3E; (test\extension\officeDevHandler.test.ts:135:46)
    at processImmediate (node:internal/timers:478:21)
    at process.topLevelDomainCallback (node:domain:160:15)
    at process.callbackTrampoline (node:internal/async_hooks:128:24)</failure></testcase>
<testcase classname="autoOpenOfficeDevProjectHandler" name="opens walk through" time="0.001"/>
<testcase classname="autoOpenOfficeDevProjectHandler" name="opens README" time="0.003"/>
<testcase classname="autoOpenOfficeDevProjectHandler" name="opens sample README" time="0.002"/>
<testcase classname="autoOpenOfficeDevProjectHandler" name="autoInstallDependency" time="0.001"/>
<testcase classname="autoOpenOfficeDevProjectHandler" name="autoInstallDependency when extension launch" time="0.001"/>
<testcase classname="autoOpenOfficeDevProjectHandler" name="openOfficeDevFolder" time="0.001"/>
<testcase classname="OfficeDevTerminal" name="should validate Office AddIn Manifest" time="0.001"/>
<testcase classname="OfficeDevTerminal" name="should install Office AddIn Dependencies" time="0.001"/>
<testcase classname="stopOfficeAddInDebug" name="should call getInstance, show and sendText" time="0.001"/>
<testcase classname="generateManifestGUID" name="should call getInstance, show and sendText with correct arguments" time="0.001"/>
<testcase classname="ProgressHandler" name="terminal" time="0.001"/>
<testcase classname="ProgressHandler" name="output" time="0.001"/>
<testcase classname="ProgressHandler" name="not started" time="0"/>
<testcase classname="UI Unit Tests Manually" name="Show Progress 2" time="8.109"/>
<testcase classname="UI Unit Tests Select Folder" name="has returns default folder" time="0.002"/>
<testcase classname="UI Unit Tests Select Folder" name="has returns user cancel" time="0.002"/>
<testcase classname="UI Unit Tests Select File" name="has returns default file" time="0.002"/>
<testcase classname="UI Unit Tests Select File" name="has returns user cancel" time="0.002"/>
<testcase classname="UI Unit Tests Select File" name="has returns item in possible files" time="0.001"/>
<testcase classname="UI Unit Tests Select File" name="has returns invalid input item id" time="0"/>
<testcase classname="UI Unit Tests Select File" name="selects a file which pass validation" time="0.002"/>
<testcase classname="UI Unit Tests Select File" name="selects a file with error thrown when validating result" time="0.002"/>
<testcase classname="UI Unit Tests Open File" name="open the preview of Markdown file" time="0.001"/>
<testcase classname="UI Unit Tests runCommand" name="runs command successfully" time="0.002"/>
<testcase classname="UI Unit Tests runCommand" name="runs command timeout" time="0.002"/>
<testcase classname="UI Unit Tests single select" name="select success with validation" time="0.003"/>
<testcase classname="UI Unit Tests single select" name="select fail with validation" time="0.002"/>
<testcase classname="UI Unit Tests single select" name="loads dynamic options in a short time" time="0.002"/>
<testcase classname="UI Unit Tests single select" name="loads dynamic option in a short time and auto select" time="0.002"/>
<testcase classname="UI Unit Tests single select" name="loads dynamic options in a short time and shows" time="0.002"/>
<testcase classname="UI Unit Tests single select" name="loads dynamic option in a long time and shows" time="0.516"/>
<testcase classname="UI Unit Tests Select local file or input" name="selects local file successfully" time="0.001"/>
<testcase classname="UI Unit Tests Select local file or input" name="selects local file error" time="0.001"/>
<testcase classname="UI Unit Tests Select local file or input" name="inputs a value sucessfully" time="0.001"/>
<testcase classname="UI Unit Tests Select local file or input" name="inputs a value error" time="0.001"/>
<testcase classname="UI Unit Tests Select local file or input" name="inputs a value back and then sucessfully" time="0.001"/>
<testcase classname="telemetry" name="sendTelemetryEvent" time="0.001"/>
<testcase classname="telemetry" name="sendTelemetryErrorEvent" time="0"/>
<testcase classname="telemetry" name="sendTelemetryException" time="0"/>
<testcase classname="AccountTreeViewProvider" name="subscribeToStatusChanges" time="0.003"/>
<testcase classname="AccountTreeViewProvider" name="getChildren" time="0"/>
<testcase classname="AzureNode" name="setSignedIn" time="0.001"/>
<testcase classname="AzureNode" name="setSignedIn with same account" time="0.001"/>
<testcase classname="AzureNode" name="setSignedIn with different account" time="0"/>
<testcase classname="AzureNode" name="setSigningIn" time="0"/>
<testcase classname="AzureNode" name="setSignedOut" time="0"/>
<testcase classname="AzureNode" name="getChildren" time="0"/>
<testcase classname="sideloadingNode" name="getTreeItem with empty string" time="0"/>
<testcase classname="sideloadingNode" name="getTreeItem with check false" time="0"/>
<testcase classname="sideloadingNode" name="getTreeItem with check true" time="0"/>
<testcase classname="sideloadingNode" name="getTreeItem with check error" time="0.001"/>
<testcase classname="sideloadingNode" name="getTreeItem with token error" time="0.001"/>
<testcase classname="sideloadingNode" name="getTreeItem with empty token" time="0.001"/>
<testcase classname="sideloadingNode" name="getChildren" time="0"/>
<testcase classname="m365Node" name="setSignedIn" time="0"/>
<testcase classname="m365Node" name="setSigningIn" time="0.001"/>
<testcase classname="m365Node" name="setSignedOut" time="0"/>
<testcase classname="m365Node" name="setSwitching" time="0"/>
<testcase classname="m365Node" name="getChildren" time="0"/>
<testcase classname="m365Node" name="updateChecks" time="0.001"/>
<testcase classname="sideloadingNode" name="getTreeItem with empty string" time="0"/>
<testcase classname="sideloadingNode" name="getTreeItem with invalid token" time="0"/>
<testcase classname="sideloadingNode" name="getTreeItem with valid token" time="0.001"/>
<testcase classname="sideloadingNode" name="getChildren" time="0"/>
<testcase classname="CommandsTreeViewProvider" name="getCommands" time="0.001"/>
<testcase classname="CommandsTreeViewProvider" name="getTreeItem" time="0"/>
<testcase classname="CommandsTreeViewProvider" name="getChildren" time="0.001"/>
<testcase classname="EnvironmentNode" name="getTreeItem for local" time="0.001"/>
<testcase classname="EnvironmentNode" name="getTreeItem for local" time="0"/>
<testcase classname="EnvironmentNode" name="getChildren returns warning for SPFx project" time="0.002"/>
<testcase classname="EnvironmentNode" name="getChildren returns subscription" time="0.001"/>
<testcase classname="EnvironmentTreeViewProvider" name="reloadEnvironments" time="0.001"/>
<testcase classname="EnvironmentTreeViewProvider" name="getChildren" time="0.001"/>
<testcase classname="OfficeDevTreeViewManager" name="registerOfficeDevTreeViews" time="0.001"/>
<testcase classname="TreeViewCommand" name="setStatus" time="0.001"/>
<testcase classname="TreeViewManager" name="registerTreeViews" time="0.001"/>
<testcase classname="TreeViewManager" name="Development Treeview" time="0.001"/>
<testcase classname="TreeViewManager" name="Development Treeview when ChatParticipant is enabled" time="0.001"/>
<testcase classname="TreeViewManager" name="setRunningCommand" time="0.001"/>
<testcase classname="TreeViewManager" name="updateTreeViewsOnSPFxChanged" time="0.001"/>
<testcase classname="TreeViewManager" name="updateTreeViewsByContent if remove project related commands" time="0.002"/>
<testcase classname="TreeViewManager" name="updateTreeViewsByContent if remove project related commands when ChatParticipant is enabled" time="0.001"/>
<testcase classname="uri handler" name="invalid uri missing query" time="0"/>
<testcase classname="uri handler" name="invalid uri missing referer" time="0.001"/>
<testcase classname="uri handler" name="invalid uri missing app id" time="0"/>
<testcase classname="uri handler" name="valid uri" time="0"/>
<testcase classname="uri handler" name="error hanlding uri" time="0.001"/>
<testcase classname="uri handler" name="dev portal running" time="0.001"/>
<testcase classname="uri handler" name="valid code spaces callback uri" time="0"/>
<testcase classname="uri handler" name="invalid uri missing sampleId" time="0.001"/>
<testcase classname="uri handler" name="valid designated sample callback uri" time="0"/>
<testcase classname="localizeUtils loadLocalizedStrings" name="should log error if no default string collection" time="0"/>
<testcase classname="localizeUtils loadLocalizedStrings" name="should log error if no string file found for current locale" time="0.001"/>
<testcase classname="localizeUtils parseLocale" name="should return current locale" time="0.001"/>
<testcase classname="checkProjectTypeAndSendTelemetry" name="happy" time="0.002"/>
<testcase classname="checkProjectTypeAndSendTelemetry" name="error" time="0"/>
<testcase classname="checkProjectTypeAndSendTelemetry" name="workspaceUri is undefined" time="0.001"/>
<testcase classname="project status utils" name="func: getFileModifiedTime" time="0.003"/>
<testcase classname="project status utils func: getProjectStatus" name="project state file deos not exist" time="0.001"/>
<testcase classname="project status utils func: getProjectStatus" name="project state file exists - not a json file" time="0.001"/>
<testcase classname="project status utils func: getProjectStatus" name="project state file exists - a json file" time="0.001"/>
<testcase classname="project status utils func: updateProjectStatus" name="command name is not in RecordedActions" time="0"/>
<testcase classname="project status utils func: updateProjectStatus" name="command name is in RecordedActions - project state file not exist" time="0.001"/>
<testcase classname="project status utils func: updateProjectStatus" name="command name is not in RecordedActions but forced - not json" time="0.002"/>
<testcase classname="project status utils func: updateProjectStatus" name="command name is not in RecordedActions but forced - json" time="0.001"/>
<testcase classname="project status utils func: getREADME" name="file not exist" time="0"/>
<testcase classname="project status utils func: getREADME" name="file exists" time="0"/>
<testcase classname="project status utils func: getLaunchJSON" name="file not exist" time="0"/>
<testcase classname="project status utils func: getLaunchJSON" name="file exists" time="0.001"/>
<testcase classname="stable version shows changelog" name="show changelog notification happy path" time="0.004"/>
<testcase classname="stable version shows changelog" name="should not show changelog if button is not clicked" time="0.001"/>
<testcase classname="stable version shows changelog" name="should not show changelog when version is not changed" time="0.001"/>
<testcase classname="prerelease version shows prerelease note" name="success" time="0.001"/>
<testcase classname="prerelease version shows prerelease note" name="returns prerelease version undefined" time="0.001"/>
<testcase classname="prerelease version shows prerelease note" name="has same version" time="0.001"/>
<testcase classname="prerelease version shows prerelease note" name="has undefined version" time="0.001"/>
<testcase classname="versionUtil Compare Version" name="same version" time="0"/>
<testcase classname="versionUtil Compare Version" name="Compare Pre Version" time="0.001"/>
<testcase classname="versionUtil Compare Version" name="Compare Empty Version" time="0"/>
<testcase classname="versionUtil Compare Version" name="Prerelease version" time="0"/>
<testcase classname="[debug &#x3E; commonUtils] getV3TeamsAppId" name="returns teamsAppId successfully" time="0.001"/>
<testcase classname="[debug &#x3E; commonUtils] isTestToolEnabledProject" name="test tool yaml exist" time="0"/>
<testcase classname="[debug &#x3E; commonUtils] isTestToolEnabledProject" name="test tool yaml not exist" time="0.001"/>
<testcase classname="devTunnelStateManager" name="happy path" time="0.019"/>
<testcase classname="devTunnelStateManager" name="concurrency" time="0.026"/>
<testcase classname="devTunnelStateManager" name="delete a non-existent item" time="0.004"/>
<testcase classname="devTunnelTaskTerminal do" name="happy path" time="0.031"/>
<testcase classname="devTunnelTaskTerminal do" name="delete existing tunnel" time="0.017"/>
<testcase classname="devTunnelTaskTerminal resolveArgs" name="undefined args" time="0.001"/>
<testcase classname="devTunnelTaskTerminal resolveArgs" name="property type - undefined" time="0"/>
<testcase classname="devTunnelTaskTerminal resolveArgs" name="property type - error string" time="0"/>
<testcase classname="devTunnelTaskTerminal resolveArgs" name="property type - number" time="0"/>
<testcase classname="devTunnelTaskTerminal resolveArgs" name="property ports - undefined" time="0"/>
<testcase classname="devTunnelTaskTerminal resolveArgs" name="property ports - not array" time="0"/>
<testcase classname="devTunnelTaskTerminal resolveArgs" name="property ports - empty" time="0"/>
<testcase classname="devTunnelTaskTerminal resolveArgs" name="property ports.portNumber - undefined" time="0"/>
<testcase classname="devTunnelTaskTerminal resolveArgs" name="property ports.portNumber - string" time="0"/>
<testcase classname="devTunnelTaskTerminal resolveArgs" name="property ports.portNumber - string" time="0"/>
<testcase classname="devTunnelTaskTerminal resolveArgs" name="property ports.protocol - undefined" time="0"/>
<testcase classname="devTunnelTaskTerminal resolveArgs" name="property ports.protocol - error string" time="0.001"/>
<testcase classname="devTunnelTaskTerminal resolveArgs" name="property ports.access - error string" time="0"/>
<testcase classname="devTunnelTaskTerminal resolveArgs" name="property ports.writeToEnvironmentFile - error type" time="0"/>
<testcase classname="devTunnelTaskTerminal resolveArgs" name="property ports.writeToEnvironmentFile.endpoint - error type" time="0.001"/>
<testcase classname="devTunnelTaskTerminal resolveArgs" name="property ports.writeToEnvironmentFile.domain - error type" time="0"/>
<testcase classname="devTunnelTaskTerminal resolveArgs" name="property ports.writeToEnvironmentFile - empty" time="0"/>
<testcase classname="devTunnelTaskTerminal resolveArgs" name="property env - error type" time="0"/>
<testcase classname="devTunnelTaskTerminal resolveArgs" name="property env - error expiration" time="0"/>
<testcase classname="devTunnelTaskTerminal resolveArgs" name="happy path" time="0"/>
<testcase classname="devTunnelTaskTerminal saveTunnelToEnv" name="empty tunnel" time="0.001"/>
<testcase classname="devTunnelTaskTerminal saveTunnelToEnv" name="empty env" time="0"/>
<testcase classname="devTunnelTaskTerminal saveTunnelToEnv" name="error uri" time="0.001"/>
<testcase classname="devTunnelTaskTerminal saveTunnelToEnv" name="one port" time="0.001"/>
<testcase classname="devTunnelTaskTerminal saveTunnelToEnv" name="multiple ports" time="0.001"/>
<testcase classname="LocalTelemetryReporter maskValue()" name="mask undefined value without known values" time="0"/>
<testcase classname="LocalTelemetryReporter maskValue()" name="mask unknown value without known values" time="0"/>
<testcase classname="LocalTelemetryReporter maskValue()" name="mask undefined value with string known values" time="0"/>
<testcase classname="LocalTelemetryReporter maskValue()" name="mask unknown value with string known values" time="0"/>
<testcase classname="LocalTelemetryReporter maskValue()" name="mask known value with string known values" time="0"/>
<testcase classname="LocalTelemetryReporter maskValue()" name="mask undefined value with mask value" time="0"/>
<testcase classname="LocalTelemetryReporter maskValue()" name="mask unknown value with mask values" time="0"/>
<testcase classname="LocalTelemetryReporter maskValue()" name="mask known value with mask values" time="0"/>
<testcase classname="LocalTelemetryReporter maskArrayValue()" name="mask undefined value without known values" time="0"/>
<testcase classname="LocalTelemetryReporter maskArrayValue()" name="mask empty array value without known values" time="0"/>
<testcase classname="LocalTelemetryReporter maskArrayValue()" name="mask unknown array value without known values" time="0.001"/>
<testcase classname="LocalTelemetryReporter maskArrayValue()" name="mask values with string known values" time="0"/>
<testcase classname="LocalTelemetryReporter maskArrayValue()" name="mask values with mask value" time="0"/>
<testcase classname="LocalTelemetryReporter getTaskInfo()" name="Failed to get task.json" time="0.001"/>
<testcase classname="LocalTelemetryReporter getTaskInfo()" name="Failed to get renamed label" time="0.005"/>
<testcase classname="LocalTelemetryReporter getTaskInfo()" name="task.json of old tab project" time="0.003"/>
<testcase classname="LocalTelemetryReporter getTaskInfo()" name="task.json of a tab + bot + func project" time="0.004"/>
<testcase classname="LocalTelemetryReporter getTaskInfo()" name="task.json of a m365 project" time="0.003"/>
<testcase classname="LocalTelemetryReporter getTaskInfo()" name="task.json of user customized project" time="0.004"/>
<testcase classname="[debug &#x3E; ProgressHelper] ParallelProgressHelper" name="empty" time="0.001"/>
<testcase classname="[debug &#x3E; ProgressHelper] ParallelProgressHelper" name="Only one message" time="0.001"/>
<testcase classname="[debug &#x3E; ProgressHelper] ParallelProgressHelper" name="Two message asc" time="0.001"/>
<testcase classname="[debug &#x3E; ProgressHelper] ParallelProgressHelper" name="Two message desc" time="0.001"/>
<testcase classname="[debug &#x3E; ProgressHelper] ParallelProgressHelper" name="Three message asc" time="0.001"/>
<testcase classname="[debug &#x3E; ProgressHelper] ParallelProgressHelper" name="Three message desc" time="0"/>
<testcase classname="[debug &#x3E; ProgressHelper] ParallelProgressHelper" name="Three message random order" time="0.001"/>
<testcase classname="[debug &#x3E; ProgressHelper] ParallelProgressHelper" name="Not finished" time="0.001"/>
<testcase classname="[debug &#x3E; teamsfxTaskProvider] resolveTask" name="no task" time="0.001"/>
<testcase classname="Migrate" name="JS Migrate app\replace-appInitialization-notifyAppLoaded" time="0.055"/>
<testcase classname="Migrate" name="JS Migrate app\replace-appInitialization-notifyExpectedFailure" time="0.011"/>
<testcase classname="Migrate" name="JS Migrate app\replace-appInitialization-notifyFailure" time="0.009"/>
<testcase classname="Migrate" name="JS Migrate app\replace-appInitialization-notifySuccess" time="0.007"/>
<testcase classname="Migrate" name="JS Migrate app\replace-executeDeepLink" time="0.006"/>
<testcase classname="Migrate" name="JS Migrate app\replace-getContext" time="0.007"/>
<testcase classname="Migrate" name="JS Migrate app\replace-initialize" time="0.006"/>
<testcase classname="Migrate" name="JS Migrate app\replace-registerOnThemeChangeHandler" time="0.005"/>
<testcase classname="Migrate" name="JS Migrate authentication\replace-authentication-authenticate" time="0.006"/>
<testcase classname="Migrate" name="JS Migrate authentication\replace-authentication-getAuthToken" time="0.007"/>
<testcase classname="Migrate" name="JS Migrate authentication\replace-authentication-getUser" time="0.006"/>
<testcase classname="Migrate" name="JS Migrate authentication\replace-authentication-initialize" time="0.006"/>
<testcase classname="Migrate" name="JS Migrate authentication\replace-authentication-notifyFailure" time="0.007"/>
<testcase classname="Migrate" name="JS Migrate authentication\replace-authentication-notifySuccess" time="0.006"/>
<testcase classname="Migrate" name="JS Migrate dialog\replace-tasks-startTask" time="0.005"/>
<testcase classname="Migrate" name="JS Migrate dialog\replace-tasks-submitTask" time="0.006"/>
<testcase classname="Migrate" name="JS Migrate dialog\replace-tasks-updateTask" time="0.005"/>
<testcase classname="Migrate" name="JS Migrate location\replace-location-getLocation" time="0.006"/>
<testcase classname="Migrate" name="JS Migrate location\replace-location-showLocation" time="0.006"/>
<testcase classname="Migrate" name="JS Migrate others\replace-default-import" time="0.006"/>
<testcase classname="Migrate" name="JS Migrate others\replace-dynamic-import-module" time="0.008"/>
<testcase classname="Migrate" name="JS Migrate others\replace-getContext-commentLine" time="0.01"/>
<testcase classname="Migrate" name="JS Migrate others\replace-import-function-directly" time="0.008"/>
<testcase classname="Migrate" name="JS Migrate others\replace-import-module" time="0.005"/>
<testcase classname="Migrate" name="JS Migrate others\replace-import-with-comment" time="0.005"/>
<testcase classname="Migrate" name="JS Migrate others\replace-multiple-namespaces" time="0.005"/>
<testcase classname="Migrate" name="JS Migrate others\replace-require-module" time="0.006"/>
<testcase classname="Migrate" name="JS Migrate others\replace-without-entire-import" time="0.005"/>
<testcase classname="Migrate" name="JS Migrate pages\replace-shareDeepLink" time="0.004"/>
<testcase classname="Migrate" name="JS Migrate pages.appButton\replace-registerAppButtonClickHandler" time="0.005"/>
<testcase classname="Migrate" name="JS Migrate pages.config\replace-settings-getSettings" time="0.005"/>
<testcase classname="Migrate" name="JS Migrate pages.config\replace-settings-initialize" time="0.006"/>
<testcase classname="Migrate" name="JS Migrate pages.config\replace-settings-registerOnRemoveHandler" time="0.007"/>
<testcase classname="Migrate" name="JS Migrate pages.config\replace-settings-registerOnSaveHandler" time="0.007"/>
<testcase classname="Migrate" name="JS Migrate pages.config\replace-settings-setSettings" time="0.009"/>
<testcase classname="Migrate" name="JS Migrate pages.config\replace-settings-setValidityState" time="0.006"/>
<testcase classname="Migrate" name="JS Migrate teamsCore\replace-enablePrintCapability" time="0.005"/>
<testcase classname="Migrate" name="JS Migrate teamsCore\replace-registerOnLoadHandler" time="0.006"/>
<testcase classname="Migrate" name="JS Migrate unchanged\replace-authentication-getUser" time="0.005"/>
<testcase classname="Migrate" name="JS Migrate unchanged\replace-uninitializeCommunication" time="0.005"/>
<testcase classname="Migrate" name="TS Migrate app\replace-appInitialization-notifyAppLoaded" time="0.014"/>
<testcase classname="Migrate" name="TS Migrate app\replace-appInitialization-notifyExpectedFailure" time="0.005"/>
<testcase classname="Migrate" name="TS Migrate app\replace-appInitialization-notifyFailure" time="0.004"/>
<testcase classname="Migrate" name="TS Migrate app\replace-appInitialization-notifySuccess" time="0.006"/>
<testcase classname="Migrate" name="TS Migrate app\replace-executeDeepLink" time="0.004"/>
<testcase classname="Migrate" name="TS Migrate app\replace-getContext" time="0.004"/>
<testcase classname="Migrate" name="TS Migrate app\replace-initialize" time="0.004"/>
<testcase classname="Migrate" name="TS Migrate app\replace-registerOnThemeChangeHandler" time="0.004"/>
<testcase classname="Migrate" name="TS Migrate authentication\replace-authentication-authenticate" time="0.006"/>
<testcase classname="Migrate" name="TS Migrate authentication\replace-authentication-getAuthToken" time="0.005"/>
<testcase classname="Migrate" name="TS Migrate authentication\replace-authentication-getUser" time="0.006"/>
<testcase classname="Migrate" name="TS Migrate authentication\replace-authentication-initialize" time="0.005"/>
<testcase classname="Migrate" name="TS Migrate authentication\replace-authentication-notifyFailure" time="0.006"/>
<testcase classname="Migrate" name="TS Migrate authentication\replace-authentication-notifySuccess" time="0.005"/>
<testcase classname="Migrate" name="TS Migrate dialog\replace-tasks-startTask" time="0.005"/>
<testcase classname="Migrate" name="TS Migrate dialog\replace-tasks-submitTask" time="0.005"/>
<testcase classname="Migrate" name="TS Migrate dialog\replace-tasks-updateTask" time="0.005"/>
<testcase classname="Migrate" name="TS Migrate enum\replace-application-entire-manual-parameter" time="0.004"/>
<testcase classname="Migrate" name="TS Migrate enum\replace-application-entire-manual-parameter2" time="0.005"/>
<testcase classname="Migrate" name="TS Migrate enum\replace-application-entire" time="0.004"/>
<testcase classname="Migrate" name="TS Migrate enum\replace-application-qualifier-entire" time="0.004"/>
<testcase classname="Migrate" name="TS Migrate enum\replace-application-qualifier" time="0.003"/>
<testcase classname="Migrate" name="TS Migrate enum\replace-application" time="0.005"/>
<testcase classname="Migrate" name="TS Migrate enum\replace-taskModuleDimension" time="0.003"/>
<testcase classname="Migrate" name="TS Migrate interface\import-entire-module\ts-expression-with-type-arguements\replace-context" time="0.016"/>
<testcase classname="Migrate" name="TS Migrate interface\import-entire-module\ts-expression-with-type-arguements\replace-settings-saveEvent" time="0.006"/>
<testcase classname="Migrate" name="TS Migrate interface\import-entire-module\ts-expression-with-type-arguements\replace-taskInfo" time="0.004"/>
<testcase classname="Migrate" name="TS Migrate interface\import-entire-module\ts-type-reference\replace-settings-saveEvent" time="0.008"/>
<testcase classname="Migrate" name="TS Migrate interface\import-entire-module\ts-type-reference\replace-settings-settings" time="0.011"/>
<testcase classname="Migrate" name="TS Migrate interface\import-entire-module\ts-type-reference\replace-taskInfo" time="0.013"/>
<testcase classname="Migrate" name="TS Migrate interface\import-entire-module\unchanged\replace-context" time="0.009"/>
<testcase classname="Migrate" name="TS Migrate interface\import-single-export\ts-expression-with-type-arguements\replace-context" time="0.019"/>
<testcase classname="Migrate" name="TS Migrate interface\import-single-export\ts-expression-with-type-arguements\replace-settings-saveEvent" time="0.008"/>
<testcase classname="Migrate" name="TS Migrate interface\import-single-export\ts-expression-with-type-arguements\replace-taskInfo" time="0.005"/>
<testcase classname="Migrate" name="TS Migrate interface\import-single-export\ts-type-reference\replace-settings-saveEvent" time="0.006"/>
<testcase classname="Migrate" name="TS Migrate interface\import-single-export\ts-type-reference\replace-settings-settings" time="0.008"/>
<testcase classname="Migrate" name="TS Migrate interface\import-single-export\ts-type-reference\replace-taskInfo" time="0.007"/>
<testcase classname="Migrate" name="TS Migrate interface\import-single-export\unchanged\replace-context" time="0.009"/>
<testcase classname="Migrate" name="TS Migrate location\replace-location-getLocation" time="0.004"/>
<testcase classname="Migrate" name="TS Migrate location\replace-location-showLocation" time="0.004"/>
<testcase classname="Migrate" name="TS Migrate others\replace-default-import" time="0.004"/>
<testcase classname="Migrate" name="TS Migrate others\replace-dynamic-import-module" time="0.005"/>
<testcase classname="Migrate" name="TS Migrate others\replace-getContext-commentLine" time="0.007"/>
<testcase classname="Migrate" name="TS Migrate others\replace-import-equals" time="0.007"/>
<testcase classname="Migrate" name="TS Migrate others\replace-import-function-directly" time="0.007"/>
<testcase classname="Migrate" name="TS Migrate others\replace-import-module" time="0.005"/>
<testcase classname="Migrate" name="TS Migrate others\replace-import-with-comment" time="0.004"/>
<testcase classname="Migrate" name="TS Migrate others\replace-multiple-namespaces" time="0.005"/>
<testcase classname="Migrate" name="TS Migrate others\replace-require-module" time="0.004"/>
<testcase classname="Migrate" name="TS Migrate others\replace-without-entire-import" time="0.006"/>
<testcase classname="Migrate" name="TS Migrate pages\replace-shareDeepLink" time="0.003"/>
<testcase classname="Migrate" name="TS Migrate pages.appButton\replace-registerAppButtonClickHandler" time="0.004"/>
<testcase classname="Migrate" name="TS Migrate pages.config\replace-settings-getSettings" time="0.004"/>
<testcase classname="Migrate" name="TS Migrate pages.config\replace-settings-initialize" time="0.004"/>
<testcase classname="Migrate" name="TS Migrate pages.config\replace-settings-registerOnRemoveHandler" time="0.007"/>
<testcase classname="Migrate" name="TS Migrate pages.config\replace-settings-registerOnSaveHandler" time="0.005"/>
<testcase classname="Migrate" name="TS Migrate pages.config\replace-settings-setSettings" time="0.004"/>
<testcase classname="Migrate" name="TS Migrate pages.config\replace-settings-setValidityState" time="0.004"/>
<testcase classname="Migrate" name="TS Migrate teamsCore\replace-enablePrintCapability" time="0.004"/>
<testcase classname="Migrate" name="TS Migrate teamsCore\replace-registerOnLoadHandler" time="0.003"/>
<testcase classname="Migrate" name="TS Migrate unchanged\replace-authentication-getUser" time="0.005"/>
<testcase classname="Migrate" name="TS Migrate unchanged\replace-uninitializeCommunication" time="0.003"/>
<testcase classname="TeamsAppMigrationHandler updateCodes" name="happy path" time="0.006"/>
<testcase classname="TeamsAppMigrationHandler updateCodes" name="some failures" time="0.002"/>
<testcase classname="TeamsAppMigrationHandler updatePackageJson" name="happy path" time="0.001"/>
<testcase classname="TeamsAppMigrationHandler updatePackageJson" name="no package.json" time="0"/>
<testcase classname="TeamsAppMigrationHandler updateManifest" name="happy path" time="0.001"/>
<testcase classname="TeamsAppMigrationHandler updateManifest" name="exception" time="0"/>
<testcase classname="CodeExplainer" name="constructor" time="0"/>
<testcase classname="CodeExplainer" name="canInvoke returns true" time="0"/>
<testcase classname="CodeExplainer" name="Invoke failure" time="0.001"/>
<testcase classname="CodeExplainer" name="Invoke Success" time="0"/>
<testcase classname="codeGenerator" name="constructor" time="0"/>
<testcase classname="codeGenerator" name="canInvoke returns true" time="0"/>
<testcase classname="codeGenerator" name="userInputBreakdownTaskAsync returns null" time="0.001"/>
<testcase classname="codeGenerator" name="userInputBreakdownTaskAsync returns null with error" time="0.004"/>
<testcase classname="codeGenerator" name="userInputBreakdownTaskAsync with LLM provided json should not continue, json detected" time="0.001"/>
<testcase classname="codeGenerator" name="userInputBreakdownTaskAsync with LLM provided json should not continue, json detected_" time="0.001"/>
<testcase classname="codeGenerator" name="userInputBreakdownTaskAsync with LLM provided json should not continue, json not detected" time="0.001"/>
<testcase classname="codeGenerator" name="userInputBreakdownTaskAsync with LLM provided json should not continue, error" time="0.002"/>
<testcase classname="codeGenerator" name="userInputBreakdownTaskAsync with LLM provided json should continue, is not customFunctions" time="0.002"/>
<testcase classname="codeGenerator" name="userInputBreakdownTaskAsync with LLM provided json should continue, is customFunctions" time="0.002"/>
<testcase classname="codeGenerator" name="generateCode - Excel - isCustomFunctions" time="0.406"/>
<testcase classname="codeGenerator" name="generateCode - Excel - not CustomFunctions" time="0.003"/>
<testcase classname="codeGenerator" name="generateCode - not Excel - isCustomFunctions" time="0.29"/>
<testcase classname="codeGenerator" name="generateCode - Excel - isCustomFunctions - valid scenarioSample" time="0.003"/>
<testcase classname="codeGenerator" name="generateCode - Excel - isCustomFunctions - return null" time="0.002"/>
<testcase classname="codeGenerator" name="Invoke Failure because no breakdownResult" time="0.002"/>
<testcase classname="codeGenerator" name="Invoke Rejected" time="0.001"/>
<testcase classname="codeGenerator" name="Invoke Failure" time="0.001"/>
<testcase classname="codeGenerator" name="Invoke Success" time="0.002"/>
<testcase classname="codeGenerator" name="Invoke Success with complexity &#x3E; 50" time="0.001"/>
<testcase classname="codeGenerator" name="Invoke Success with MeasurementCodeGenExecutionTimeInTotalSec" time="0.002"/>
<testcase classname="CodeGuidance" name="constructor" time="0"/>
<testcase classname="CodeIssueCorrector" name="constructor" time="0"/>
<testcase classname="CodeIssueCorrector" name="canInvoke returns true" time="0"/>
<testcase classname="CodeIssueCorrector" name="fixIssueAsync no error return codeSnippet" time="0.001"/>
<testcase classname="CodeIssueCorrector" name="fixIssueAsync error with the LLM output and Excel host, isCustomFunctions false" time="0.002"/>
<testcase classname="CodeIssueCorrector" name="fixIssueAsync error with the LLM output and Excel host, isCustomFunctions true" time="0.001"/>
<testcase classname="CodeIssueCorrector" name="fixIssueAsync error with the LLM output and other host" time="0.001"/>
<testcase classname="CodeIssueCorrector" name="fixIssueAsync error with code length reduced too much" time="0.001"/>
<testcase classname="CodeIssueCorrector" name="fixIssueAsync return newCodeStr" time="0.001"/>
<testcase classname="CodeIssueCorrector" name="invoke return success when no issues are found in baseline with complexity &#x3C; 25" time="0.002"/>
<testcase classname="CodeIssueCorrector" name="invoke return success when no issues are found in baseline with complexity &#x3C; 50" time="0.001"/>
<testcase classname="CodeIssueCorrector" name="invoke return success when no issues are found in baseline with complexity &#x3C; 75" time="0.001"/>
<testcase classname="CodeIssueCorrector" name="invoke return success when no issues are found in baseline with complexity &#x3E;= 75" time="0.001"/>
<testcase classname="CodeIssueCorrector" name="invoke return failure low quality code" time="0.001"/>
<testcase classname="CodeIssueCorrector" name="invoke found issue and self reflection fail fast" time="0.002"/>
<testcase classname="CodeIssueCorrector" name="invoke found issue and self reflection fail fast, terminateFixIteration codeLengthDelta &#x3C; 0" time="0.002"/>
<testcase classname="CodeIssueCorrector" name="invoke success" time="0.003"/>
<testcase classname="CodeIssueCorrector" name="invoke success with 3 errors" time="0.003"/>
<testcase classname="CodeIssueCorrector" name="invoke success with error increase once" time="0.002"/>
<testcase classname="File: codeIssueDetector Class: DetectionResult" name="merge should success" time="0"/>
<testcase classname="File: codeIssueDetector Class: DetectionResult" name="areSame should works" time="0"/>
<testcase classname="File: codeIssueDetector Class: CodeIssueDetector" name="getInstance should works for singleton" time="0"/>
<testcase classname="File: codeIssueDetector Class: CodeIssueDetector Method: detectIssuesAsync" name="normal input should works" time="3.536"><failure>Timeout of 3500ms exceeded. For async tests and hooks, ensure &#x22;done()&#x22; is called; if returning a Promise, ensure it resolves. (C:\Users\ruiqiyang\Desktop\TTK_Telemetry\TeamsFx\packages\vscode-extension\test\officeChat\common\skills\codeIssueDetector.test.ts)
Error: Timeout of 3500ms exceeded. For async tests and hooks, ensure &#x22;done()&#x22; is called; if returning a Promise, ensure it resolves. (C:\Users\ruiqiyang\Desktop\TTK_Telemetry\TeamsFx\packages\vscode-extension\test\officeChat\common\skills\codeIssueDetector.test.ts)
    at processTicksAndRejections (node:internal/process/task_queues:95:5)</failure></testcase>
<testcase classname="File: codeIssueDetector Class: CodeIssueDetector Method: detectIssuesAsync" name="condition of &#x60;this.program&#x60; is undefined" time="0"/>
<testcase classname="File: codeIssueDetector Class: CodeIssueDetector Method: getCompilationErrorsAsync" name="condition of diagnostic.file is empty" time="2.579"/>
<testcase classname="File: codeIssueDetector Class: CodeIssueDetector Method: getCompilationErrorsAsync" name="other conditions in diagnostics.forEach block" time="0.001"/>
<testcase classname="File: codeIssueDetector Class: CodeIssueDetector Method: getCompilationErrorsAsync" name="error treatment: Property Does Not Exist On Type With Suggestions" time="0.001"/>
<testcase classname="File: codeIssueDetector Class: CodeIssueDetector Method: getCompilationErrorsAsync" name="error treatment: Property Does Not Exist On Type" time="0.001"/>
<testcase classname="File: codeIssueDetector Class: CodeIssueDetector Method: getCompilationErrorsAsync" name="error treatment: Property Does Not Exist On Type - Condition 1" time="0.001"/>
<testcase classname="File: codeIssueDetector Class: CodeIssueDetector Method: getCompilationErrorsAsync" name="error treatment: Property Does Not Exist On Type - Condition 2" time="0.001"/>
<testcase classname="File: codeIssueDetector Class: CodeIssueDetector Method: getCompilationErrorsAsync" name="error treatment: Property Does Not Exist On Type - Condition 3" time="0.001"/>
<testcase classname="File: codeIssueDetector Class: CodeIssueDetector Method: getCompilationErrorsAsync" name="error treatment: Property Does Not Exist On Type - Condition 4" time="0.001"/>
<testcase classname="File: codeIssueDetector Class: CodeIssueDetector Method: getCompilationErrorsAsync" name="error treatment: Property Does Not Exist On Type - Condition 5" time="0.001"><failure>Bad arguments: First argument should be a string, second should be an array of strings
Error: Bad arguments: First argument should be a string, second should be an array of strings
    at Object.findBestMatch (node_modules\.pnpm\string-similarity@4.0.4\node_modules\string-similarity\src\index.js:40:54)
    at Object.callback (src\officeChat\common\skills\codeIssueDetector.ts:31:74)
    at CodeIssueDetector.getErrorTreatment (src\officeChat\common\skills\codeIssueDetector.ts:103:63)
    at C:\Users\ruiqiyang\Desktop\TTK_Telemetry\TeamsFx\packages\vscode-extension\src\officeChat\common\skills\codeIssueDetector.ts:23:56
    at Array.forEach (&#x3C;anonymous&#x3E;)
    at CodeIssueDetector.getCompilationErrorsAsync (src\officeChat\common\skills\codeIssueDetector.ts:23:56)
    at C:\Users\ruiqiyang\Desktop\TTK_Telemetry\TeamsFx\packages\vscode-extension\test\officeChat\common\skills\codeIssueDetector.test.ts:280:33
    at Generator.next (&#x3C;anonymous&#x3E;)
    at C:\Users\ruiqiyang\Desktop\TTK_Telemetry\TeamsFx\packages\vscode-extension\test\officeChat\common\skills\codeIssueDetector.test.ts:8:71
    at new Promise (&#x3C;anonymous&#x3E;)
    at __awaiter (test\officeChat\common\skills\codeIssueDetector.test.ts:4:12)
    at Context.&#x3C;anonymous&#x3E; (test\officeChat\common\skills\codeIssueDetector.test.ts:270:87)
    at processImmediate (node:internal/timers:478:21)
    at process.topLevelDomainCallback (node:domain:160:15)
    at process.callbackTrampoline (node:internal/async_hooks:128:24)</failure></testcase>
<testcase classname="File: codeIssueDetector Class: CodeIssueDetector Method: getCompilationErrorsAsync" name="error treatment: Property Does Not Exist On Type - Condition 6" time="0.001"><failure>Bad arguments: First argument should be a string, second should be an array of strings
Error: Bad arguments: First argument should be a string, second should be an array of strings
    at Object.findBestMatch (node_modules\.pnpm\string-similarity@4.0.4\node_modules\string-similarity\src\index.js:40:54)
    at Object.callback (src\officeChat\common\skills\codeIssueDetector.ts:31:74)
    at CodeIssueDetector.getErrorTreatment (src\officeChat\common\skills\codeIssueDetector.ts:103:63)
    at C:\Users\ruiqiyang\Desktop\TTK_Telemetry\TeamsFx\packages\vscode-extension\src\officeChat\common\skills\codeIssueDetector.ts:23:56
    at Array.forEach (&#x3C;anonymous&#x3E;)
    at CodeIssueDetector.getCompilationErrorsAsync (src\officeChat\common\skills\codeIssueDetector.ts:23:56)
    at C:\Users\ruiqiyang\Desktop\TTK_Telemetry\TeamsFx\packages\vscode-extension\test\officeChat\common\skills\codeIssueDetector.test.ts:296:33
    at Generator.next (&#x3C;anonymous&#x3E;)
    at C:\Users\ruiqiyang\Desktop\TTK_Telemetry\TeamsFx\packages\vscode-extension\test\officeChat\common\skills\codeIssueDetector.test.ts:8:71
    at new Promise (&#x3C;anonymous&#x3E;)
    at __awaiter (test\officeChat\common\skills\codeIssueDetector.test.ts:4:12)
    at Context.&#x3C;anonymous&#x3E; (test\officeChat\common\skills\codeIssueDetector.test.ts:285:87)
    at processImmediate (node:internal/timers:478:21)
    at process.topLevelDomainCallback (node:domain:160:15)
    at process.callbackTrampoline (node:internal/async_hooks:128:24)</failure></testcase>
<testcase classname="File: codeIssueDetector Class: CodeIssueDetector Method: getCompilationErrorsAsync" name="error treatment: Property Does Not Exist On Type - Condition 7" time="0.001"><failure>Bad arguments: First argument should be a string, second should be an array of strings
Error: Bad arguments: First argument should be a string, second should be an array of strings
    at Object.findBestMatch (node_modules\.pnpm\string-similarity@4.0.4\node_modules\string-similarity\src\index.js:40:54)
    at Object.callback (src\officeChat\common\skills\codeIssueDetector.ts:31:74)
    at CodeIssueDetector.getErrorTreatment (src\officeChat\common\skills\codeIssueDetector.ts:103:63)
    at C:\Users\ruiqiyang\Desktop\TTK_Telemetry\TeamsFx\packages\vscode-extension\src\officeChat\common\skills\codeIssueDetector.ts:23:56
    at Array.forEach (&#x3C;anonymous&#x3E;)
    at CodeIssueDetector.getCompilationErrorsAsync (src\officeChat\common\skills\codeIssueDetector.ts:23:56)
    at C:\Users\ruiqiyang\Desktop\TTK_Telemetry\TeamsFx\packages\vscode-extension\test\officeChat\common\skills\codeIssueDetector.test.ts:312:33
    at Generator.next (&#x3C;anonymous&#x3E;)
    at C:\Users\ruiqiyang\Desktop\TTK_Telemetry\TeamsFx\packages\vscode-extension\test\officeChat\common\skills\codeIssueDetector.test.ts:8:71
    at new Promise (&#x3C;anonymous&#x3E;)
    at __awaiter (test\officeChat\common\skills\codeIssueDetector.test.ts:4:12)
    at Context.&#x3C;anonymous&#x3E; (test\officeChat\common\skills\codeIssueDetector.test.ts:301:87)
    at processImmediate (node:internal/timers:478:21)
    at process.topLevelDomainCallback (node:domain:160:15)
    at process.callbackTrampoline (node:internal/async_hooks:128:24)</failure></testcase>
<testcase classname="File: codeIssueDetector Class: CodeIssueDetector Method: getCompilationErrorsAsync" name="error treatment: Property Does Not Exist On Type - Condition 8" time="0.001"><failure>Bad arguments: First argument should be a string, second should be an array of strings
Error: Bad arguments: First argument should be a string, second should be an array of strings
    at Object.findBestMatch (node_modules\.pnpm\string-similarity@4.0.4\node_modules\string-similarity\src\index.js:40:54)
    at Object.callback (src\officeChat\common\skills\codeIssueDetector.ts:31:74)
    at CodeIssueDetector.getErrorTreatment (src\officeChat\common\skills\codeIssueDetector.ts:103:63)
    at C:\Users\ruiqiyang\Desktop\TTK_Telemetry\TeamsFx\packages\vscode-extension\src\officeChat\common\skills\codeIssueDetector.ts:23:56
    at Array.forEach (&#x3C;anonymous&#x3E;)
    at CodeIssueDetector.getCompilationErrorsAsync (src\officeChat\common\skills\codeIssueDetector.ts:23:56)
    at C:\Users\ruiqiyang\Desktop\TTK_Telemetry\TeamsFx\packages\vscode-extension\test\officeChat\common\skills\codeIssueDetector.test.ts:325:33
    at Generator.next (&#x3C;anonymous&#x3E;)
    at C:\Users\ruiqiyang\Desktop\TTK_Telemetry\TeamsFx\packages\vscode-extension\test\officeChat\common\skills\codeIssueDetector.test.ts:8:71
    at new Promise (&#x3C;anonymous&#x3E;)
    at __awaiter (test\officeChat\common\skills\codeIssueDetector.test.ts:4:12)
    at Context.&#x3C;anonymous&#x3E; (test\officeChat\common\skills\codeIssueDetector.test.ts:317:87)
    at processImmediate (node:internal/timers:478:21)
    at process.topLevelDomainCallback (node:domain:160:15)
    at process.callbackTrampoline (node:internal/async_hooks:128:24)</failure></testcase>
<testcase classname="File: codeIssueDetector Class: CodeIssueDetector Method: getCompilationErrorsAsync" name="error treatment: Property Does Not Exist On Type - Condition 9" time="0.002"><failure>Bad arguments: First argument should be a string, second should be an array of strings
Error: Bad arguments: First argument should be a string, second should be an array of strings
    at Object.findBestMatch (node_modules\.pnpm\string-similarity@4.0.4\node_modules\string-similarity\src\index.js:40:54)
    at Object.callback (src\officeChat\common\skills\codeIssueDetector.ts:31:74)
    at CodeIssueDetector.getErrorTreatment (src\officeChat\common\skills\codeIssueDetector.ts:103:63)
    at C:\Users\ruiqiyang\Desktop\TTK_Telemetry\TeamsFx\packages\vscode-extension\src\officeChat\common\skills\codeIssueDetector.ts:23:56
    at Array.forEach (&#x3C;anonymous&#x3E;)
    at CodeIssueDetector.getCompilationErrorsAsync (src\officeChat\common\skills\codeIssueDetector.ts:23:56)
    at C:\Users\ruiqiyang\Desktop\TTK_Telemetry\TeamsFx\packages\vscode-extension\test\officeChat\common\skills\codeIssueDetector.test.ts:339:33
    at Generator.next (&#x3C;anonymous&#x3E;)
    at C:\Users\ruiqiyang\Desktop\TTK_Telemetry\TeamsFx\packages\vscode-extension\test\officeChat\common\skills\codeIssueDetector.test.ts:8:71
    at new Promise (&#x3C;anonymous&#x3E;)
    at __awaiter (test\officeChat\common\skills\codeIssueDetector.test.ts:4:12)
    at Context.&#x3C;anonymous&#x3E; (test\officeChat\common\skills\codeIssueDetector.test.ts:329:87)
    at processImmediate (node:internal/timers:478:21)
    at process.topLevelDomainCallback (node:domain:160:15)
    at process.callbackTrampoline (node:internal/async_hooks:128:24)</failure></testcase>
<testcase classname="File: codeIssueDetector Class: CodeIssueDetector Method: getCompilationErrorsAsync" name="error treatment: No Function Return Or No Implementation" time="0.001"/>
<testcase classname="File: codeIssueDetector Class: CodeIssueDetector Method: getCompilationErrorsAsync" name="error treatment: No Function Return Or No Implementation - Condition 1" time="0.001"/>
<testcase classname="File: codeIssueDetector Class: CodeIssueDetector Method: getCompilationErrorsAsync" name="error treatment: Cannot Find Module" time="0.001"/>
<testcase classname="File: codeIssueDetector Class: CodeIssueDetector Method: getCompilationErrorsAsync" name="error treatment: Cannot Find Module - Condition 1" time="0"/>
<testcase classname="File: codeIssueDetector Class: CodeIssueDetector Method: getCompilationErrorsAsync" name="error treatment: Argument Count Mismatch" time="0.001"/>
<testcase classname="File: codeIssueDetector Class: CodeIssueDetector Method: getCompilationErrorsAsync" name="error treatment: Argument Count Mismatch - Condition 1" time="0.001"/>
<testcase classname="File: codeIssueDetector Class: CodeIssueDetector Method: getCompilationErrorsAsync" name="error treatment: Argument Count Mismatch - Condition 2" time="0.001"/>
<testcase classname="File: codeIssueDetector Class: CodeIssueDetector Method: getCompilationErrorsAsync" name="error treatment: Argument Count Mismatch - Condition 3" time="0.001"/>
<testcase classname="File: codeIssueDetector Class: CodeIssueDetector Method: getCompilationErrorsAsync" name="error treatment: Argument Count Mismatch - Condition 4" time="0.002"/>
<testcase classname="File: codeIssueDetector Class: CodeIssueDetector Method: getCompilationErrorsAsync" name="error treatment: Argument Type Mismatch" time="0.001"/>
<testcase classname="File: codeIssueDetector Class: CodeIssueDetector Method: getCompilationErrorsAsync" name="error treatment: Argument Type Mismatch - Condition 1" time="0.001"/>
<testcase classname="File: codeIssueDetector Class: CodeIssueDetector Method: getCompilationErrorsAsync" name="error treatment: Argument Type Mismatch - Condition 2" time="0.001"/>
<testcase classname="File: codeIssueDetector Class: CodeIssueDetector Method: getCompilationErrorsAsync" name="error treatment: Argument Type Mismatch - Condition 3" time="0.001"/>
<testcase classname="File: codeIssueDetector Class: CodeIssueDetector Method: getCompilationErrorsAsync" name="error treatment: Argument Type Mismatch - Condition 4" time="0.001"/>
<testcase classname="File: codeIssueDetector Class: CodeIssueDetector Method: getCompilationErrorsAsync" name="error treatment: Operator Add On Type Mismatch" time="0.001"/>
<testcase classname="File: codeIssueDetector Class: CodeIssueDetector Method: getCompilationErrorsAsync" name="error treatment: Operator Add On Type Mismatch - Condition 1" time="0.001"/>
<testcase classname="File: codeIssueDetector Class: CodeIssueDetector Method: getCompilationErrorsAsync" name="error treatment: Type Is Not Assignable To Type" time="0.001"/>
<testcase classname="File: codeIssueDetector Class: CodeIssueDetector Method: getCompilationErrorsAsync" name="error treatment: Type Is Not Assignable To Type - Condition 1" time="0"/>
<testcase classname="File: codeIssueDetector Class: CodeIssueDetector Method: getCompilationErrorsAsync" name="error treatment: Convert Type To Type Mistake" time="0.001"/>
<testcase classname="File: codeIssueDetector Class: CodeIssueDetector Method: getCompilationErrorsAsync" name="error treatment: Convert Type To Type Mistake - Condition 1" time="0.001"/>
<testcase classname="File: codeIssueDetector Class: CodeIssueDetector Method: getCompilationErrorsAsync" name="error treatment: Overload Mismatch" time="0.001"/>
<testcase classname="File: codeIssueDetector Class: CodeIssueDetector Method: getCompilationErrorsAsync" name="error treatment: Overload Mismatch - Condition 1" time="0.001"/>
<testcase classname="File: codeIssueDetector Class: CodeIssueDetector Method: getCompilationErrorsAsync" name="error treatment: Overload Mismatch - Condition 2" time="0.001"/>
<testcase classname="File: codeIssueDetector Class: CodeIssueDetector Method: getCompilationErrorsAsync" name="error treatment: Overload Mismatch - Condition 3" time="0.001"/>
<testcase classname="File: codeIssueDetector Class: CodeIssueDetector Method: getCompilationErrorsAsync" name="error treatment: Overload Mismatch - Condition 3" time="0.001"/>
<testcase classname="File: codeIssueDetector Class: CodeIssueDetector Method: getCompilationErrorsAsync" name="error treatment: Overload Mismatch - Condition 4" time="0.001"/>
<testcase classname="File: codeIssueDetector Class: CodeIssueDetector Method: getCompilationErrorsAsync" name="error treatment: Cannot Find Name" time="0.001"/>
<testcase classname="File: codeIssueDetector Class: CodeIssueDetector Method: getCompilationErrorsAsync" name="error treatment: Cannot Find Name - Condition 1" time="0.001"/>
<testcase classname="File: codeIssueDetector Class: CodeIssueDetector Method: getCompilationErrorsAsync" name="error treatment: Cannot Assign To Read Only Property" time="0.001"/>
<testcase classname="File: codeIssueDetector Class: CodeIssueDetector Method: getCompilationErrorsAsync" name="error treatment: Cannot Assign To Read Only Property - Condition 1" time="0.001"/>
<testcase classname="File: codeIssueDetector Class: CodeIssueDetector Method: getCompilationErrorsAsync" name="error treatment: Top Level Expression Forbiden" time="0.001"/>
<testcase classname="File: codeIssueDetector Class: CodeIssueDetector Method: getCompilationErrorsAsync" name="error treatment: Top Level Expression Forbiden - Condition 1" time="0"/>
<testcase classname="File: codeIssueDetector Class: CodeIssueDetector Method: getCompilationErrorsAsync" name="error treatment: Expression Expected Handlder" time="0"/>
<testcase classname="File: codeIssueDetector Class: CodeIssueDetector Method: getCompilationErrorsAsync" name="error treatment: Expression Expected Handlder - Condition 1" time="0.001"/>
<testcase classname="File: codeIssueDetector Class: CodeIssueDetector Method: getCompilationErrorsAsync" name="error treatment: Others" time="0.001"/>
<testcase classname="File: codeIssueDetector Class: CodeIssueDetector Method: getPotentialRuntimeIssues" name="condition when is Custom Function" time="0.001"/>
<testcase classname="File: codeIssueDetector Class: CodeIssueDetector Method: getPotentialRuntimeIssues" name="typeChecker undefined would return in the beginning" time="0.001"/>
<testcase classname="File: codeIssueDetector Class: CodeIssueDetector Method: getPotentialRuntimeIssues" name="runtime issue: findImportAndRequireStatements" time="0.001"/>
<testcase classname="File: codeIssueDetector Class: CodeIssueDetector Method: getPotentialRuntimeIssues" name="runtime issue: findEntryFunctionInGeneratedCode" time="0.001"/>
<testcase classname="File: codeIssueDetector Class: CodeIssueDetector Method: getPotentialRuntimeIssues" name="runtime issue: findEntryFunctionInGeneratedCode - Condition 1" time="0.001"/>
<testcase classname="File: codeIssueDetector Class: CodeIssueDetector Method: getPotentialRuntimeIssues" name="runtime issue: findEntryFunctionInGeneratedCode - Condition 2" time="0.001"/>
<testcase classname="File: codeIssueDetector Class: CodeIssueDetector Method: getPotentialRuntimeIssues" name="runtime issue: findEntryFunctionInGeneratedCode - Condition 3" time="0.001"/>
<testcase classname="File: codeIssueDetector Class: CodeIssueDetector Method: getPotentialRuntimeIssues" name="runtime issue: findEntryFunctionInGeneratedCode - Condition 4" time="0"/>
<testcase classname="File: codeIssueDetector Class: CodeIssueDetector Method: getPotentialRuntimeIssues" name="runtime issue: findPropertyAccessAfterCallExpression" time="0.001"/>
<testcase classname="File: codeIssueDetector Class: CodeIssueDetector Method: getPotentialRuntimeIssues" name="runtime issue: findOfficeAPIObjectPropertyAccess" time="0.001"/>
<testcase classname="File: codeIssueDetector Class: CodeIssueDetector Method: getPotentialRuntimeIssues" name="runtime issue: findOfficeAPIObjectPropertyAccess - Condition 1" time="0.001"/>
<testcase classname="File: codeIssueDetector Class: CodeIssueDetector Method: getPotentialRuntimeIssues" name="runtime issue: findOfficeAPIObjectPropertyAccess - Condition 2" time="0.001"/>
<testcase classname="File: codeIssueDetector Class: CodeIssueDetector Method: getPotentialRuntimeIssues" name="runtime issue: findExcelA1NotationInStringConcatenation" time="0.002"/>
<testcase classname="File: codeIssueDetector Class: CodeIssueDetector Method: getPotentialRuntimeIssues" name="runtime issue: findExcelA1NotationInStringConcatenation - Condition 1" time="0.001"/>
<testcase classname="File: codeIssueDetector Class: CodeIssueDetector Method: getPotentialRuntimeIssues" name="runtime issue: findExcelA1NotationInStringInterpolation" time="0.001"/>
<testcase classname="File: codeIssueDetector Class: CodeIssueDetector Method: getPotentialRuntimeIssues" name="runtime issue: findExcelA1NotationInStringInterpolation - Condition 1" time="0.001"/>
<testcase classname="File: codeIssueDetector Class: CodeIssueDetector Method: getPotentialRuntimeIssues" name="runtime issue: findExcelA1NotationInStringInterpolation - Condition 2" time="0.001"/>
<testcase classname="File: codeIssueDetector Class: CodeIssueDetector Method: getPotentialRuntimeIssues" name="runtime issue: findExcelA1NotationInStringInterpolation - Condition 3" time="0.001"/>
<testcase classname="File: codeIssueDetector Class: CodeIssueDetector Method: getPotentialRuntimeIssues" name="runtime issue: findExcelA1NotationInStringInterpolation - Condition 4" time="0.001"/>
<testcase classname="File: codeIssueDetector Class: CodeIssueDetector Method: getPotentialRuntimeIssues" name="runtime issue: findExcelA1NotationInStringInterpolation - Condition 5" time="0.002"/>
<testcase classname="File: codeIssueDetector Class: CodeIssueDetector Method: getPotentialRuntimeIssues" name="runtime issue: findExcelA1NotationInStringInterpolation - Condition 6" time="0.001"/>
<testcase classname="File: codeIssueDetector Class: CodeIssueDetector Method: getPotentialRuntimeIssues" name="runtime issue: findExcelA1NotationInAllStringLiteral" time="0"/>
<testcase classname="File: codeIssueDetector Class: CodeIssueDetector Method: getPotentialRuntimeIssues" name="runtime issue: isValidExcelA1Notation" time="0"/>
<testcase classname="printer" name="constructor" time="0"/>
<testcase classname="printer" name="canInvoke returns true" time="0"/>
<testcase classname="printer" name="Invoke failure" time="0.001"/>
<testcase classname="printer" name="Invoke Success" time="0"/>
<testcase classname="projectCreator" name="constructor" time="0"/>
<testcase classname="projectCreator" name="canInvoke returns true" time="0"/>
<testcase classname="projectCreator" name="Invoke - mergeCFCode - no write file error" time="0.004"/>
<testcase classname="projectCreator" name="Invoke - mergeCFCode - write file error" time="0.006"/>
<testcase classname="projectCreator" name="Invoke - mergeTaskpaneCode - no write file error" time="0.003"/>
<testcase classname="projectCreator" name="Invoke - mergeTaskpaneCode - write file error" time="0.003"/>
<testcase classname="skillset" name="constructor" time="0"/>
<testcase classname="skillset" name="canInvoke returns true" time="0.001"/>
<testcase classname="skillset" name="canInvoke returns false" time="0"/>
<testcase classname="skillset" name="skillset Invoke success with no skills" time="0.001"/>
<testcase classname="skillset" name="skillset Invoke failure with no skill can invoke" time="0.001"/>
<testcase classname="skillset" name="skillset Invoke success" time="0.001"/>
<testcase classname="skillset" name="skillset Invoke rejected" time="0.001"/>
<testcase classname="skillset" name="skillset Invoke failure" time="0.001"/>
<testcase classname="skillset" name="skillset Invoke failed and go next" time="0.001"/>
<testcase classname="skillsManager" name="getInstance create instance" time="0"/>
<testcase classname="skillsManager" name="getInstance return same instance" time="0"/>
<testcase classname="skillsManager" name="getCapableSkills GenerateCode" time="0"/>
<testcase classname="skillsManager" name="getCapableSkills Create" time="0"/>
<testcase classname="skillsManager" name="getCapableSkills other commands" time="0"/>
<testcase classname="office steps: canOfficeAddInPreviewInLocalEnv" name="should return true when launchJSONContent includes &#x22;desktop (edge legacy)&#x22; or &#x22;desktop (edge chromium)&#x22;" time="0"/>
<testcase classname="office steps: canOfficeAddInPreviewInLocalEnv" name="should return false when launchJSONContent does not include &#x22;desktop (edge legacy)&#x22; or &#x22;desktop (edge chromium)&#x22;" time="0"/>
<testcase classname="office steps: canOfficeAddInPreviewInLocalEnv" name="should return false when projectOpened or launchJSONContent is not defined" time="0"/>
<testcase classname="office steps: isDependenciesInstalled" name="isDependenciesInstalled" time="0.001"/>
<testcase classname="office steps: officeNextStepCommandHandler" name="prompt is unempty" time="0.001"/>
<testcase classname="office steps: officeNextStepCommandHandler" name="prompt empty - no workspace" time="0.002"/>
<testcase classname="office steps: officeNextStepCommandHandler" name="prompt empty - app opened" time="0.002"/>
<testcase classname="office steps title: &#x22;Teams Toolkit&#x22;" name="condition: selected" time="0.001"/>
<testcase classname="office steps title: &#x22;Teams Toolkit&#x22;" name="condition: not selected" time="0.001"/>
<testcase classname="office steps title: &#x22;New Project&#x22;" name="condition: selected" time="0"/>
<testcase classname="office steps title: &#x22;New Project&#x22;" name="condition: not selected" time="0.001"/>
<testcase classname="office steps title: &#x22;Summary of README&#x22;" name="description" time="0.001"/>
<testcase classname="office steps title: &#x22;Summary of README&#x22;" name="condition: selected" time="0.001"/>
<testcase classname="office steps title: &#x22;Summary of README&#x22;" name="condition: not selected - no project opened" time="0"/>
<testcase classname="office steps title: &#x22;Summary of README&#x22;" name="condition: not selected - prerequisite check failed" time="0.001"/>
<testcase classname="office steps title: &#x22;Summary of README&#x22;" name="condition: not selected - did action before" time="0.001"/>
<testcase classname="office steps title: &#x22;Summary of README&#x22;" name="condition: not selected - had no readme content" time="0.001"/>
<testcase classname="office steps Install Dependencies" name="condition: selected - project opened, did action after scaffolded, dependencies not installed" time="0"/>
<testcase classname="office steps Install Dependencies" name="condition: not selected - project not opened" time="0"/>
<testcase classname="office steps Install Dependencies" name="condition: not selected - did no action after scaffolded" time="0"/>
<testcase classname="office steps Install Dependencies" name="condition: not selected - dependencies installed" time="0.001"/>
<testcase classname="office steps Preview in Local Environment" name="condition: selected - project opened, did action after scaffolded, dependencies installed, can preview in local env, debug not succeeded after source code changed" time="0.001"/>
<testcase classname="office steps Preview in Local Environment" name="condition: not selected - project not opened" time="0"/>
<testcase classname="office steps Preview in Local Environment" name="condition: not selected - did no action after scaffolded" time="0.001"/>
<testcase classname="office steps Preview in Local Environment" name="condition: not selected - dependencies not installed" time="0.001"/>
<testcase classname="office steps Preview in Local Environment" name="condition: not selected - cannot preview in local env" time="0.001"/>
<testcase classname="office steps Preview in Local Environment" name="condition: not selected - debug succeeded after source code changed" time="0.001"/>
<testcase classname="office steps Publish to App Source and Deploy" name="condition: selected - project opened, did action after scaffolded, dependencies installed, debug succeeded after source code changed" time="0.001"/>
<testcase classname="office steps Publish to App Source and Deploy" name="condition: not selected - project not opened" time="0.001"/>
<testcase classname="office steps Publish to App Source and Deploy" name="condition: not selected - did no action after scaffolded" time="0.001"/>
<testcase classname="office steps Publish to App Source and Deploy" name="condition: not selected - dependencies not installed" time="0.001"/>
<testcase classname="office steps Publish to App Source and Deploy" name="condition: not selected - debug not succeeded after source code changed" time="0.001"/>
<testcase classname="office steps: getWholeStatus" name="folder !== undefined" time="0.002"/>
<testcase classname="BM25" name="should create an instance" time="0"/>
<testcase classname="BM25" name="should calculate average document length" time="0"/>
<testcase classname="BM25" name="should perform a search" time="0.001"/>
<testcase classname="stemmer" name="should stem the input word" time="0"/>
<testcase classname="stemmer" name="should return the same word if it cannot be stemmed" time="0"/>
<testcase classname="stemmer" name="should stem all words" time="0.001"/>
<testcase classname="stemText" name="should stem the input texts" time="0"/>
<testcase classname="stemText" name="should return the same word in synonymReplaceRules" time="0"/>
<testcase classname="prepareExamples" name="should prepare examples and return an array and a map" time="0.001"/>
<testcase classname="BM25" name="should create an instance" time="0"/>
<testcase classname="BM25" name="should calculate average document length" time="0"/>
<testcase classname="BM25" name="should perform a search" time="0"/>
<testcase classname="OfficeTemplateModelPorvider" name="should return BM25Model" time="0.684"/>
<testcase classname="SampleProvider" name="should return top K most relevant scenario sample codes" time="0.001"><failure>expected {} to be an array
AssertionError: expected {} to be an array
    at C:\Users\ruiqiyang\Desktop\TTK_Telemetry\TeamsFx\packages\vscode-extension\test\officeChat\samples\sampleProvider.test.ts:22:31
    at Generator.next (&#x3C;anonymous&#x3E;)
    at fulfilled (test\officeChat\samples\sampleProvider.test.ts:5:58)</failure></testcase>
<testcase classname="SampleProvider" name="not valid host" time="0.163"><failure>expected {} to be an array
AssertionError: expected {} to be an array
    at C:\Users\ruiqiyang\Desktop\TTK_Telemetry\TeamsFx\packages\vscode-extension\test\officeChat\samples\sampleProvider.test.ts:38:31
    at Generator.next (&#x3C;anonymous&#x3E;)
    at fulfilled (test\officeChat\samples\sampleProvider.test.ts:5:58)
    at processTicksAndRejections (node:internal/process/task_queues:95:5)</failure></testcase>
</testsuite>
